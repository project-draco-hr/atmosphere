{
  CometEvent event=(CometEvent)req.getAttribute(COMET_EVENT);
  if (event == null) {
    throw unableToDetectComet;
  }
  Action action=null;
  if (event.getEventType() == EventType.BEGIN) {
    action=suspended(req,res);
    if (action.type == Action.TYPE.SUSPEND) {
      logger.debug("Suspending response: {}",res);
      try {
        if (action.timeout != -1) {
          event.setTimeout((int)action.timeout);
        }
 else {
          event.setTimeout(Integer.MAX_VALUE);
        }
        req.setAttribute(SUSPENDED,true);
      }
 catch (      UnsupportedOperationException ex) {
      }
    }
 else     if (action.type == Action.TYPE.RESUME) {
      logger.debug("Resuming response: {}",res);
      bz51881(event);
    }
 else {
      bz51881(event);
    }
  }
 else   if (event.getEventType() == EventType.READ) {
  }
 else   if (event.getEventSubType() == CometEvent.EventSubType.CLIENT_DISCONNECT) {
    logger.debug("Client closed connection: response: {}",res);
    if (req.getAttribute(SUSPENDED) != null) {
      req.setAttribute(SUSPENDED,null);
      action=cancelled(req,res);
    }
 else {
      logger.debug("Cancelling response: {}",res);
    }
    bz51881(event);
  }
 else   if (event.getEventSubType() == CometEvent.EventSubType.TIMEOUT) {
    logger.debug("Timing out response: {}",res);
    action=timedout(req,res);
    bz51881(event);
  }
 else   if (event.getEventType() == EventType.ERROR) {
    bz51881(event);
  }
 else   if (event.getEventType() == EventType.END) {
    if (req.getAttribute(SUSPENDED) != null && closeConnectionOnInputStream) {
      req.setAttribute(SUSPENDED,null);
      action=cancelled(req,res);
    }
 else {
      logger.debug("Cancelling response: {}",res);
      bz51881(event);
    }
  }
  return action;
}
