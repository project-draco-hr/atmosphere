{
  CometEvent event=(CometEvent)req.getAttribute(COMET_EVENT);
  if (event == null) {
    throw unableToDetectComet;
  }
  Action action=null;
  if (event.getEventType() == EventType.BEGIN) {
    action=suspended(req,res);
    if (action.type() == Action.TYPE.SUSPEND) {
      try {
        if (action.timeout() != -1) {
          event.setTimeout((int)action.timeout());
        }
 else {
          event.setTimeout(Integer.MAX_VALUE);
        }
      }
 catch (      UnsupportedOperationException ex) {
        logger.trace("Warning: CometEvent.setTimeout not supported on this Tomcat instance. " + " [The Tomcat native connector does not support timeouts on asynchronous I/O.]");
      }
      req.setAttribute(SUSPENDED,true);
    }
 else {
      bz51881(event);
    }
  }
 else   if (event.getEventType() == EventType.READ) {
  }
 else   if (event.getEventSubType() == CometEvent.EventSubType.CLIENT_DISCONNECT) {
    if (req.getAttribute(SUSPENDED) != null) {
      req.setAttribute(SUSPENDED,null);
      action=cancelled(req,res);
    }
    bz51881(event);
  }
 else   if (event.getEventSubType() == CometEvent.EventSubType.TIMEOUT) {
    action=timedout(req,res);
    bz51881(event);
  }
 else   if (event.getEventType() == EventType.ERROR) {
    bz51881(event);
  }
 else   if (event.getEventType() == EventType.END) {
    if (req.resource() != null && req.resource().isResumed()) {
      AtmosphereResourceImpl.class.cast(req.resource()).cancel();
    }
 else     if (req.getAttribute(SUSPENDED) != null && closeConnectionOnInputStream) {
      req.setAttribute(SUSPENDED,null);
      action=cancelled(req,res);
    }
 else {
      bz51881(event);
    }
  }
  return action;
}
