{
  HttpServletRequest req=cometEvent.getHttpServletRequest();
  HttpServletResponse res=cometEvent.getHttpServletResponse();
  req.setAttribute(Tomcat7CometSupport.COMET_EVENT,cometEvent);
  if (!framework.getAsyncSupport().supportWebSocket()) {
    if (!framework.isCometSupportSpecified && !framework.isCometSupportConfigured.getAndSet(true)) {
synchronized (framework.asyncSupport) {
        if (!framework.asyncSupport.getClass().equals(Tomcat7CometSupport.class)) {
          AsyncSupport current=framework.asyncSupport;
          logger.warn("TomcatCometSupport7 is enabled, switching to it");
          framework.asyncSupport=new Tomcat7CometSupport(framework.config);
          if (current instanceof AsynchronousProcessor) {
            ((AsynchronousProcessor)current).shutdown();
          }
          framework.asyncSupport.init(framework.config.getServletConfig());
        }
      }
    }
  }
  framework.doCometSupport(AtmosphereRequest.wrap(req),AtmosphereResponse.wrap(res));
  String transport=cometEvent.getHttpServletRequest().getParameter(HeaderConfig.X_ATMOSPHERE_TRANSPORT);
  boolean webSocketSupported=(transport != null && transport.equalsIgnoreCase(HeaderConfig.WEBSOCKET_TRANSPORT));
  if (!webSocketSupported) {
    try {
      Enumeration<String> connection=req.getHeaders("Connection");
      if (connection != null && connection.hasMoreElements()) {
        String[] e=connection.nextElement().toString().split(",");
        for (        String upgrade : e) {
          if (upgrade.trim().equalsIgnoreCase(WEBSOCKET_UPGRADE)) {
            webSocketSupported=true;
            break;
          }
        }
      }
    }
 catch (    Exception ex) {
      logger.trace("",ex);
    }
  }
  if (webSocketSupported) {
    cometEvent.close();
  }
}
