{
  if (logger.isLoggable(Level.INFO)) {
    logger.info("WebSocket upgrade requested");
  }
  return new WebSocket(){
    private WebSocketProcessor webSocketProcessor;
    public void onConnect(    WebSocket.Outbound outbound){
      webSocketProcessor=new WebSocketProcessor(AtmosphereServlet.this,new JettyWebSocketSupport(outbound));
      try {
        webSocketProcessor.connect(new JettyWebSocketSupport(request));
      }
 catch (      IOException e) {
        logger.log(Level.WARNING,"",e);
      }
    }
    public void onMessage(    byte frame,    String data){
      webSocketProcessor.broadcast(frame,data);
    }
    public void onMessage(    byte frame,    byte[] data,    int offset,    int length){
      webSocketProcessor.broadcast(frame,new String(data,offset,length));
    }
    public void onDisconnect(){
      webSocketProcessor.close();
    }
  }
;
class JettyRequestFix extends HttpServletRequestWrapper {
    public JettyRequestFix(    HttpServletRequest request){
      super(request);
    }
    public String getContextPath(){
      String path=super.getContextPath();
      if (path == null || path.equals("")) {
        return "/";
      }
      return path;
    }
  }
}
