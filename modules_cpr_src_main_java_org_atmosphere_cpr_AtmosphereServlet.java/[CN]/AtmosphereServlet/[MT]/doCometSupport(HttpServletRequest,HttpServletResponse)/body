{
  req.setAttribute(BROADCASTER_FACTORY,broadcasterFactory);
  req.setAttribute(PROPERTY_USE_STREAM,useStreamForFlushingComments);
  req.setAttribute(BROADCASTER_CLASS,broadcasterClassName);
  req.setAttribute(SUPPORT_TRACKABLE,config.getInitParameter(SUPPORT_TRACKABLE));
  try {
    if (config.getInitParameter(ALLOW_QUERYSTRING_AS_HEADER) != null) {
      return cometSupport.service(new AtmosphereRequest.Builder().headers(configureHeader(req)).request(req).build(),res);
    }
 else {
      return cometSupport.service(req,res);
    }
  }
 catch (  IllegalStateException ex) {
    logger.warn(ex.getMessage(),ex);
    if (ex.getMessage() != null && ex.getMessage().startsWith("Tomcat failed")) {
      if (!isFilter) {
        logger.warn("Failed using comet support: {}, error: {}",cometSupport.getClass().getName(),ex.getMessage());
        logger.warn("Using BlockingIOCometSupport.");
      }
      cometSupport=new BlockingIOCometSupport(config);
      service(req,res);
    }
 else {
      logger.error("AtmosphereServlet exception",ex);
      throw ex;
    }
  }
  return null;
}
