{
  if (broadcasterFactoryClassName != null) {
    broadcasterFactory=(BroadcasterFactory)Thread.currentThread().getContextClassLoader().loadClass(broadcasterFactoryClassName).newInstance();
  }
  if (broadcasterFactory == null) {
    Class<? extends Broadcaster> bc=(Class<? extends Broadcaster>)Thread.currentThread().getContextClassLoader().loadClass(broadcasterClassName);
    logger.info("Using BroadcasterFactory class: {}",DefaultBroadcasterFactory.class.getName());
    broadcasterFactory=new DefaultBroadcasterFactory(bc,broadcasterLifeCyclePolicy,config);
  }
  if (sc != null) {
    sc.setAttribute(BroadcasterFactory.class.getName(),broadcasterFactory);
  }
  config.setBroadcasterFactory(broadcasterFactory);
  BroadcasterFactory.setBroadcasterFactory(broadcasterFactory,config);
  InjectorProvider.getInjector().inject(broadcasterFactory);
  Iterator<Entry<String,AtmosphereHandlerWrapper>> i=atmosphereHandlers.entrySet().iterator();
  AtmosphereHandlerWrapper w;
  Entry<String,AtmosphereHandlerWrapper> e;
  while (i.hasNext()) {
    e=i.next();
    w=e.getValue();
    BroadcasterConfig broadcasterConfig=new BroadcasterConfig(broadcasterFilters,config);
    if (w.broadcaster == null) {
      w.broadcaster=broadcasterFactory.get(w.mapping);
    }
 else {
      w.broadcaster.setBroadcasterConfig(broadcasterConfig);
      if (broadcasterCacheClassName != null) {
        BroadcasterCache cache=(BroadcasterCache)Thread.currentThread().getContextClassLoader().loadClass(broadcasterCacheClassName).newInstance();
        InjectorProvider.getInjector().inject(cache);
        broadcasterConfig.setBroadcasterCache(cache);
      }
    }
  }
}
