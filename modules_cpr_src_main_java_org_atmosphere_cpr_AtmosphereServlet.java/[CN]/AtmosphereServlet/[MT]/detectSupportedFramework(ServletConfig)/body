{
  ClassLoader cl=Thread.currentThread().getContextClassLoader();
  try {
    cl.loadClass(PRIMEFACES_SERVLET);
    return false;
  }
 catch (  Throwable ignored) {
  }
  try {
    cl.loadClass(JERSEY_CONTAINER);
    useStreamForFlushingComments=true;
  }
 catch (  Throwable t) {
    return false;
  }
  logger.warning("Missing META-INF/atmosphere.xml but found the Jersey runtime. Starting Jersey");
  ReflectorServletProcessor rsp=new ReflectorServletProcessor();
  if (!isBroadcasterSpecified)   broadcasterClassName=lookupDefaultBroadcasterType();
  rsp.setServletClassName(JERSEY_CONTAINER);
  sessionSupport(false);
  initParams.put(DISABLE_ONSTATE_EVENT,"true");
  String mapping=sc.getInitParameter(PROPERTY_SERVLET_MAPPING);
  if (mapping == null) {
    mapping="/*";
  }
  Class<? extends Broadcaster> bc=(Class<? extends Broadcaster>)cl.loadClass(broadcasterClassName);
  Broadcaster b=bc.getDeclaredConstructor(new Class[]{String.class}).newInstance(mapping);
  addAtmosphereHandler(mapping,rsp,b);
  return true;
}
