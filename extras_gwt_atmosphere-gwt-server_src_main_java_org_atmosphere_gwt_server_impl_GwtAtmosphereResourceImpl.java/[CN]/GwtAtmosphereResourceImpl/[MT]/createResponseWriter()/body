{
  ClientOracle clientOracle=RPCUtil.getClientOracle(atmResource.getRequest(),atmosphereHandler.getServletContext());
  SerializationPolicy serializationPolicy=clientOracle == null ? RPCUtil.createSimpleSerializationPolicy() : null;
  String transport=atmResource.getRequest().getParameter("tr");
  if ("WebSocket".equals(transport)) {
    logger.debug("atmosphere-gwt Using websocket");
    return new WebsocketResponseWriter(this,serializationPolicy,clientOracle);
  }
 else   if ("HTTPRequest".equals(transport)) {
    logger.debug("atmosphere-gwt Using XMLHttpRequest");
    return new HTTPRequestResponseWriter(this,serializationPolicy,clientOracle);
  }
 else   if ("IFrame".equals(transport)) {
    logger.debug("atmosphere-gwt Using streaming IFrame");
    return new IFrameResponseWriter(this,serializationPolicy,clientOracle);
  }
 else   if ("OperaEventSource".equals(transport)) {
    logger.debug("atmosphere-gwt Using Opera EventSource");
    return new OperaEventSourceResponseWriter(this,serializationPolicy,clientOracle);
  }
 else   if ("IEXDomainRequest".equals(transport)) {
    logger.debug("atmosphere-gwt Using IE XDomainRequest");
    return new IEXDomainRequestResponseWriter(this,serializationPolicy,clientOracle);
  }
 else   if ("IEHTMLFile".equals(transport)) {
    logger.debug("atmosphere-gwt Using IE html file iframe");
    return new IEHTMLFileResponseWriter(this,serializationPolicy,clientOracle);
  }
 else {
    throw new IllegalStateException("Failed to determine responsewriter");
  }
}
