{
  if (!loggedMsg.getAndSet(true)) {
    logger.debug("Atmosphere detected WebSocket: {}",webSocket.getClass().getName());
  }
  AtmosphereResponse wsr=new AtmosphereResponse(webSocket,request,destroyable);
  request.headers(configureHeader(request));
  request.setAttribute(WebSocket.WEBSOCKET_SUSPEND,true);
  dispatch(request,wsr);
  if (webSocket.resource() != null) {
    webSocketProtocol.onOpen(webSocket);
    if (!webSocket.resource().getAtmosphereResourceEvent().isSuspended()) {
      webSocketProtocol.onError(webSocket,new WebSocketException("No AtmosphereResource has been suspended. The WebSocket will be closed:  " + request.getRequestURI(),wsr));
    }
 else {
      final AsynchronousProcessor.AsynchronousProcessorHook hook=new AsynchronousProcessor.AsynchronousProcessorHook((AtmosphereResourceImpl)webSocket.resource());
      request.setAttribute(ASYNCHRONOUS_HOOK,hook);
      final Action action=((AtmosphereResourceImpl)webSocket.resource()).action();
      if (action.timeout() != -1 && !framework.getAsyncSupport().getContainerName().contains("Netty")) {
        final AtomicReference<Future<?>> f=new AtomicReference();
        f.set(scheduler.scheduleAtFixedRate(new Runnable(){
          @Override public void run(){
            if (WebSocketAdapter.class.isAssignableFrom(webSocket.getClass()) && System.currentTimeMillis() - WebSocketAdapter.class.cast(webSocket).lastTick() > action.timeout()) {
              hook.timedOut();
              f.get().cancel(true);
            }
          }
        }
,action.timeout(),action.timeout(),TimeUnit.MILLISECONDS));
      }
    }
  }
}
