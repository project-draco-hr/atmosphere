{
  AtmosphereResource<HttpServletRequest,HttpServletResponse> resource=(AtmosphereResource<HttpServletRequest,HttpServletResponse>)webSocket.resource();
  if (resource == null)   return;
  AtmosphereResourceImpl r=AtmosphereResourceImpl.class.cast(resource);
  for (  AtmosphereResourceEventListener l : r.atmosphereResourceEventListener()) {
    if (WebSocketEventListener.class.isAssignableFrom(l.getClass())) {
switch (event.type()) {
case CONNECT:
        WebSocketEventListener.class.cast(l).onConnect(event);
      break;
case DISCONNECT:
    WebSocketEventListener.class.cast(l).onDisconnect(event);
  break;
case CONTROL:
WebSocketEventListener.class.cast(l).onControl(event);
break;
case MESSAGE:
WebSocketEventListener.class.cast(l).onMessage(event);
break;
case HANDSHAKE:
WebSocketEventListener.class.cast(l).onHandshake(event);
break;
case CLOSE:
WebSocketEventListener.class.cast(l).onClose(event);
break;
}
}
}
}
