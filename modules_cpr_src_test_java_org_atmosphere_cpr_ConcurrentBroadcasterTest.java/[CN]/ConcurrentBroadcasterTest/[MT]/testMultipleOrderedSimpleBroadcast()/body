{
  AtmosphereConfig config=new AtmosphereFramework().getAtmosphereConfig();
  DefaultBroadcasterFactory factory=new DefaultBroadcasterFactory(SimpleBroadcaster.class,"NEVER",config);
  config.framework().setBroadcasterFactory(factory);
  broadcaster=(DefaultBroadcaster)factory.get(SimpleBroadcaster.class,"test");
  long t1=System.currentTimeMillis();
  AR2 a=new AR2();
  int count=50;
  int client=100;
  for (int i=0; i < client; i++) {
    broadcaster.addAtmosphereResource(newAR(a));
  }
  final CountDownLatch latch=new CountDownLatch(count * client);
  broadcaster.addBroadcasterListener(new BroadcasterListenerAdapter(){
    @Override public void onPostCreate(    Broadcaster b){
    }
    @Override public void onComplete(    Broadcaster b){
      latch.countDown();
    }
    @Override public void onPreDestroy(    Broadcaster b){
    }
  }
);
  for (int i=0; i < count; i++) {
    broadcaster.broadcast("message-" + i);
  }
  latch.await(60,TimeUnit.SECONDS);
  assertEquals(a.count.get(),count * client);
  System.out.println("Took: " + (System.currentTimeMillis() - t1));
}
