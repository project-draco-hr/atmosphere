{
  AtmosphereConfig config=new AtmosphereFramework().getAtmosphereConfig();
  DefaultBroadcasterFactory factory=new DefaultBroadcasterFactory(SimpleBroadcaster.class,"NEVER",config);
  config.framework().setBroadcasterFactory(factory);
  broadcaster=(DefaultBroadcaster)factory.get(SimpleBroadcaster.class,"test");
  long t1=System.currentTimeMillis();
  atmosphereHandler=new AR();
  ar=new AtmosphereResourceImpl(broadcaster.getBroadcasterConfig().getAtmosphereConfig(),broadcaster,mock(AtmosphereRequestImpl.class),AtmosphereResponseImpl.newInstance(),mock(BlockingIOCometSupport.class),atmosphereHandler);
  broadcaster.addAtmosphereResource(ar);
  final CountDownLatch latch=new CountDownLatch(1000);
  broadcaster.addBroadcasterListener(new BroadcasterListenerAdapter(){
    @Override public void onPostCreate(    Broadcaster b){
    }
    @Override public void onComplete(    Broadcaster b){
      latch.countDown();
    }
    @Override public void onPreDestroy(    Broadcaster b){
    }
  }
);
  StringBuffer b=new StringBuffer();
  for (int i=0; i < 1000; i++) {
    b.append("message-" + i);
    broadcaster.broadcast("message-" + i);
  }
  latch.await(60,TimeUnit.SECONDS);
  assertEquals(atmosphereHandler.value.get().toString(),b.toString());
}
