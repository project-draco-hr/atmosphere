{
  BufferedReader data=request.getReader();
  List<Object> postMessages=new ArrayList<Object>();
  GwtAtmosphereResource resource=lookupResource(connectionID);
  if (resource == null) {
    return;
  }
  String mode=resource.getRequest().getParameter(Constants.CLIENT_SERIALZE_MODE_PARAMETER);
  SerialMode serialMode;
  if (mode != null) {
    serialMode=SerialMode.valueOf(mode);
  }
 else {
    serialMode=SerialMode.RPC;
  }
  try {
    while (true) {
      String event=data.readLine();
      if (event == null) {
        break;
      }
      String action=data.readLine();
      if (logger.isTraceEnabled()) {
        logger.trace("[" + connectionID + "] Server message received: "+ event+ ";"+ action);
      }
      if (event.equals("o") || event.equals("s")) {
        int length=Integer.parseInt(data.readLine());
        char[] messageData=new char[length];
        int totalRead=0;
        int read=0;
        while ((read=data.read(messageData,totalRead,length - totalRead)) != -1) {
          totalRead+=read;
          if (totalRead == length) {
            break;
          }
        }
        if (totalRead != length) {
          throw new IllegalStateException("Corrupt message received");
        }
        Object message=null;
        if (event.equals("o")) {
          try {
            message=deserialize(messageData,serialMode);
          }
 catch (          SerializationException ex) {
            logger.error("Failed to deserialize message",ex);
          }
        }
 else {
          message=String.copyValueOf(messageData);
        }
        if (message != null) {
          if (action.equals("p")) {
            postMessages.add(message);
          }
 else           if (action.equals("b")) {
            broadcast(message,resource);
          }
        }
      }
 else       if (event.equals("c")) {
        if (action.equals("d")) {
          disconnect(resource);
        }
      }
    }
  }
 catch (  IOException ex) {
    logger.error("[" + connectionID + "] Failed to read",ex);
  }
  if (postMessages.size() > 0) {
    post(request,response,postMessages,resource);
  }
}
