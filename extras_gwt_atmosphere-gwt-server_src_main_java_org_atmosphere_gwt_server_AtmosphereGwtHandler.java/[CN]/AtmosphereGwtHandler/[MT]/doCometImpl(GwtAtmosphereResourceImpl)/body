{
  try {
    resource.getWriterImpl().initiate();
    if (resources == null) {
      resources=new ConcurrentHashMap<Integer,GwtAtmosphereResource>(5);
      scheduler.scheduleWithFixedDelay(new Runnable(){
        @Override public void run(){
          reapResources();
        }
      }
,30,10,TimeUnit.SECONDS);
    }
    resources.put(resource.getConnectionID(),resource);
  }
 catch (  IOException e) {
    logger.error("Error initiating GwtComet",e);
    return;
  }
  int timeout;
  try {
    timeout=doComet(resource);
    if (timeout == -1) {
      logger.info("You have set an infinite timeout for your comet connection this is not recommended");
    }
  }
 catch (  ServletException e) {
    logger.error("Error calling doComet()",e);
    return;
  }
catch (  IOException e) {
    logger.error("Error calling doComet()",e);
    return;
  }
  resource.suspend(timeout);
}
