{
  HashMap<String,DispatchTable> dispatchMap=buildDispatchTableMap(requestedType,false);
  HashMap<String,DispatchTable> staticDispatchMap=buildDispatchTableMap(requestedType,true);
  HashSet<String> exported=new HashSet<String>();
  HashSet<String> staticExported=new HashSet<String>();
  for (  JExportableMethod method : requestedType.getExportableMethods()) {
    if (method.isStatic() ? !staticExported.contains(method.getName()) : !exported.contains(method.getName())) {
      exportMethod(method,method.isStatic() ? staticDispatchMap : dispatchMap);
      if (method.isStatic()) {
        exported.add(method.getName());
      }
 else {
        staticExported.add(method.getName());
      }
    }
  }
  if (!xTypeOracle.isClosure(requestedType.getType().getQualifiedSourceName())) {
    if (DispatchTable.isAnyOverridden(dispatchMap)) {
      registerDispatchMap(requestedType,dispatchMap,false);
    }
    if (DispatchTable.isAnyOverridden(staticDispatchMap)) {
      registerDispatchMap(requestedType,staticDispatchMap,true);
    }
  }
}
