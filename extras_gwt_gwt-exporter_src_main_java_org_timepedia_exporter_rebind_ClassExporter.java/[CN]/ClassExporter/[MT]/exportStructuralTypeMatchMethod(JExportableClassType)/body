{
  sw.println("public static native boolean ___match(JavaScriptObject jso) /*-{");
  sw.indent();
  sw.print("return ");
  for (  JStructuralTypeField field : requestedType.getStructuralTypeFields()) {
    JExportableType eType=field.getExportableType();
    if (eType == null) {
      logger.log(TreeLogger.ERROR,"Structural type field " + field.getMethodName() + " for class "+ requestedType.getQualifiedSourceName()+ " is not exportable.");
      throw new UnableToCompleteException();
    }
    if (eType instanceof JExportableClassType) {
      JExportableClassType cType=(JExportableClassType)field.getExportableType();
      if (cType.needsExport() && cType.isStructuralType()) {
        sw.print("(jso." + field.getName() + " && @"+ ((JExportableClassType)eType).getQualifiedExporterImplementationName()+ "::___match(Lcom/google/gwt/core/client/JavaScriptObject;)(jso."+ field.getName()+ ") &&");
      }
 else       if (cType.needsExport()) {
        sw.print("(jso." + field.getName() + " && jso."+ field.getName()+ ".__gwt__instance) && ");
      }
 else       if (!cType.needsExport()) {
        sw.print("typeof(jso." + field.getName() + ") == '"+ eType.getJsTypeOf()+ "' && ");
      }
    }
 else     if (eType instanceof JExportablePrimitiveType) {
      sw.print("typeof(jso." + field.getName() + ") == '"+ eType.getJsTypeOf()+ "' && ");
    }
  }
  sw.println("true;");
  sw.outdent();
  sw.println("}-*/;");
}
