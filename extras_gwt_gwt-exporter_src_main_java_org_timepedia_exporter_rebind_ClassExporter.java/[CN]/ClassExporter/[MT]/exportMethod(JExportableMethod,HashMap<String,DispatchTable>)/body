{
  JExportableType retType=method.getExportableReturnType();
  if (retType == null) {
    logger.log(TreeLogger.ERROR,"Return type of method " + method.toString() + " is not Exportable.",null);
    throw new UnableToCompleteException();
  }
  int arity=method.getExportableParameters().length;
  String name=method.getUnqualifiedExportName();
  String key=name + "_" + arity;
  if (retType != null && retType.needsExport() && !exported.contains(retType)) {
    if (exportDependentClass(retType.getQualifiedSourceName())) {
      ;
    }
    exported.add((JExportableClassType)retType);
  }
  exportDependentParams(method);
  String returnTypeCast=retType != null ? retType.getHostedModeJsTypeCast() : null;
  if (method.isStatic()) {
    sw.print("$wnd." + method.getJSQualifiedExportName() + " = ");
  }
 else {
    sw.print("_." + method.getUnqualifiedExportName() + "= ");
  }
  if (returnTypeCast != null) {
    sw.print("@org.timepedia.exporter.client.ExporterHostedModeUtil::deboxHostedMode(Lcom/google/gwt/core/client/JavaScriptObject;Lcom/google/gwt/core/client/JavaScriptObject;)(" + returnTypeCast + ",");
  }
  sw.print("$entry(function(");
  DispatchTable dt=dispatchMap.get(method.getUnqualifiedExportName());
  declareJSParameters(method,dt.isOverloaded() ? dt.maxArity() : -1);
  sw.print(") { ");
  boolean isVoid=retType.getQualifiedSourceName().equals("void");
  if (!dt.isOverloaded()) {
    sw.print((isVoid ? "" : "var x=") + (method.isStatic() ? "@" : "this.__gwt_instance.@") + method.getJSNIReference()+ "(");
    declareJSPassedValues(method,false);
    sw.print(");");
  }
 else {
    sw.print((isVoid ? "" : "var x=@org.timepedia.exporter.client.ExporterUtil::getDispatch(" + "Ljava/lang/Class;Ljava/lang/String;" + "Lcom/google/gwt/core/client/JsArray;Z)"+ "(@"+ method.getEnclosingExportType().getQualifiedSourceName()) + "::class,'" + method.getUnqualifiedExportName()+ "', arguments,"+ method.isStatic()+ ").apply("+ (method.isStatic() ? "null" : "this.__gwt_instance")+ ", arguments");
    sw.print(");");
  }
  if (dt.isOverloaded() || !retType.needsExport()) {
    sw.print(isVoid ? "" : "return (");
  }
 else {
    boolean isArray=retType instanceof JExportableArrayType;
    String arrayType=isArray ? ((JExportableArrayType)retType).getJSNIReference() : "";
    sw.print((isVoid ? "" : "return ") + "@org.timepedia.exporter.client.ExporterUtil::wrap(" + (isArray ? "Lorg/timepedia/exporter/client/Exportable;" : "Lorg/timepedia/exporter/client/Exportable;")+ ")(");
  }
  if (!isVoid) {
    sw.println("x);");
  }
  sw.print("})");
  if (returnTypeCast != null) {
    sw.print(")");
  }
  sw.println(";");
}
