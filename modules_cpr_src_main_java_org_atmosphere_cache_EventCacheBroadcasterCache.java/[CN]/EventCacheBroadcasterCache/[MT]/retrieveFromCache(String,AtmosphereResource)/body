{
  String clientId=r.uuid();
  long now=System.nanoTime();
  List<Object> result=new ArrayList<Object>();
  ClientQueue clientQueue;
synchronized (messages) {
    activeClients.put(clientId,now);
    clientQueue=messages.remove(clientId);
  }
  List<CacheMessage> clientMessages;
  if (clientQueue == null) {
    clientMessages=Collections.emptyList();
  }
 else {
    clientMessages=clientQueue.getQueue();
  }
  for (  CacheMessage cacheMessage : clientMessages) {
    result.add(cacheMessage.getMessage());
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Retrieved for AtmosphereResource {} cached messages {}",r.uuid(),result);
    logger.debug("Retrieved for AtmosphereResource {} cached size {}",r.uuid(),result.size());
  }
  return result;
}
