{
  long now=System.nanoTime();
  String messageId=UUID.randomUUID().toString();
  CacheMessage cacheMessage=new CacheMessage(messageId,e);
synchronized (messages) {
    if (r == null) {
      for (      Map.Entry<String,Long> entry : activeClients.entrySet()) {
        addMessageIfNotExists(entry.getKey(),cacheMessage);
      }
    }
 else {
      String clientId=r.transport() == AtmosphereResource.TRANSPORT.WEBSOCKET ? (String)r.getRequest().getAttribute(ApplicationConfig.SUSPENDED_ATMOSPHERE_RESOURCE_UUID) : r.uuid();
      activeClients.put(clientId,now);
      if (isAtmosphereResourceValid(r)) {
        Broadcaster broadcaster=getBroadCaster(broadcasterId);
        List<AtmosphereResource> resources=new ArrayList<AtmosphereResource>(broadcaster.getAtmosphereResources());
        Set<String> disconnectedClients=getDisconnectedClients(resources);
        for (        String disconnectedId : disconnectedClients) {
          addMessageIfNotExists(disconnectedId,cacheMessage);
        }
      }
 else {
        addMessageIfNotExists(clientId,cacheMessage);
      }
    }
  }
}
