{
  if (deliver.async) {
    if (!bc.getBroadcasterCache().getClass().equals(BroadcasterCache.DEFAULT.getClass())) {
      if (r.isResumed() || r.isCancelled()) {
        logger.trace("AtmosphereResource {} has been resumed or cancelled, unable to Broadcast message {}",r.uuid(),deliver.message);
        AtmosphereResource r2=config.resourcesFactory().find(r.uuid());
        logger.trace("Found an AtmosphereResource {} in state {}",r2,r.isSuspended());
        if (r2 != null && r2.isSuspended() && r.hashCode() != r2.hashCode()) {
          removeAtmosphereResource(r2);
          checkCachedAndPush(r2,r2.getAtmosphereResourceEvent());
        }
        return;
      }
    }
    AsyncWriteToken w=new AsyncWriteToken(r,deliver.message,deliver.future,deliver.originalMessage,deliver.cache,count);
    if (!outOfOrderBroadcastSupported.get()) {
      WriteQueue writeQueue=writeQueues.get(r.uuid());
      if (writeQueue == null) {
        writeQueue=new WriteQueue(r.uuid());
        writeQueues.put(r.uuid(),writeQueue);
      }
      writeQueue.queue.put(w);
synchronized (writeQueue) {
        if (!writeQueue.monitored.getAndSet(true)) {
          logger.trace("Broadcaster {} is about to queueWriteIO for AtmosphereResource {}",name,r.uuid());
          bc.getAsyncWriteService().submit(getAsyncWriteHandler(writeQueue));
        }
      }
    }
 else {
      uniqueWriteQueue.queue.offer(w);
    }
  }
 else {
    executeBlockingWrite(r,deliver,count);
  }
}
