{
  try {
    logger.trace("Broadcaster {} will be pooled: {}",getID(),candidateForPoolable);
    if (!candidateForPoolable) {
      if (notifyOnPreDestroy())       return;
      if (destroyed.getAndSet(true))       return;
      logger.trace("Broadcaster {} is being destroyed and cannot be re-used. Policy was {}",getID(),policy);
      logger.trace("Broadcaster {} is being destroyed and cannot be re-used. Resources are {}",getID(),resources);
      started.set(false);
      releaseExternalResources();
      killReactiveThreads();
      if (bc != null) {
        bc.destroy();
      }
      lifeCycleListeners.clear();
      delayedBroadcast.clear();
      if (!sharedListeners) {
        broadcasterListeners.clear();
      }
    }
    resources.clear();
    broadcastOnResume.clear();
    messages.clear();
    writeQueues.clear();
    if (config.getBroadcasterFactory() != null) {
      config.getBroadcasterFactory().remove(this,this.getID());
    }
  }
 catch (  Throwable t) {
    logger.error("Unexpected exception during Broadcaster destroy {}",getID(),t);
  }
}
