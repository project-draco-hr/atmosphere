{
  if (destroyed.get()) {
    logger.debug(DESTROYED,getID(),"removeAtmosphereResource(AtmosphereResource r)");
    return this;
  }
  boolean removed;
synchronized (resources) {
    removed=resources.remove(r);
    if (removed && r.isSuspended()) {
      logger.debug("Excluded from {} : {}",getID(),r.uuid());
      bc.getBroadcasterCache().excludeFromCache(getID(),r);
    }
    if (removed)     notifyOnRemoveAtmosphereResourceListener(r);
  }
  if (!removed)   return this;
  logger.trace("Removing AtmosphereResource {} for Broadcaster {}",r.uuid(),name);
  writeQueues.remove(r.uuid());
  if (executeDone) {
    AtmosphereResourceImpl aImpl=AtmosphereResourceImpl.class.cast(r);
    BroadcasterFuture f=(BroadcasterFuture)aImpl.getRequest(false).getAttribute(getID());
    if (f != null && !f.isDone() && !f.isCancelled()) {
      aImpl.getRequest(false).removeAttribute(getID());
      entryDone(f);
    }
  }
  if (resources.isEmpty()) {
    notifyEmptyListener();
    if (scope != SCOPE.REQUEST && lifeCyclePolicy.getLifeCyclePolicy() == EMPTY) {
      releaseExternalResources();
    }
 else     if (scope == SCOPE.REQUEST || lifeCyclePolicy.getLifeCyclePolicy() == EMPTY_DESTROY) {
      config.getBroadcasterFactory().remove(this,name);
      destroy();
    }
  }
  return this;
}
