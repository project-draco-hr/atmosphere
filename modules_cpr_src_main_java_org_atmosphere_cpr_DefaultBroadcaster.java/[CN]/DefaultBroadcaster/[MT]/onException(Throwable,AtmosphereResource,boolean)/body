{
  final AtmosphereResourceImpl r=AtmosphereResourceImpl.class.cast(ar);
  logger.trace("Unexpected exception for AtmosphereResource {} and Broadcaster {}",ar.uuid(),getID());
  logger.trace("NotifyAndCache ",notifyAndCache);
  logger.trace("",t);
  removeAtmosphereResource(r);
  if (notifyAndCache) {
    final AtmosphereResourceEventImpl event=r.getAtmosphereResourceEvent();
    event.setThrowable(t);
    r.notifyListeners(event);
    r.removeEventListeners();
  }
  if (notifyAndCache) {
    cacheLostMessage(r,(AsyncWriteToken)r.getRequest(false).getAttribute(ASYNC_TOKEN),notifyAndCache);
  }
  if (bc != null && bc.getAsyncWriteService() != null) {
    bc.getAsyncWriteService().execute(new Runnable(){
      @Override public void run(){
        try {
          logger.trace("Forcing connection close {}",ar.uuid());
          r.resume();
          r.close();
        }
 catch (        Throwable t) {
          logger.trace("Was unable to resume a corrupted AtmosphereResource {}",r);
          logger.trace("Cause",t);
        }
      }
    }
);
  }
 else {
    r.resume();
  }
}
