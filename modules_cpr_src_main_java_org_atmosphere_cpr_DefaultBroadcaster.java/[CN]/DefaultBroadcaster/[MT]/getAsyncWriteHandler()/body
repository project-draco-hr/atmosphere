{
  return new Runnable(){
    public void run(){
      AsyncWriteToken token=null;
      try {
        token=asyncWriteQueue.poll(10,TimeUnit.SECONDS);
        if (token == null) {
          if (!destroyed.get()) {
            logger.trace("Poll Async Write for {} for resources of size {}",DefaultBroadcaster.this.getID(),DefaultBroadcaster.this.resources.size());
            asyncWriteFuture=bc.getAsyncWriteService().submit(this);
          }
          return;
        }
synchronized (token.resource) {
          bc.getAsyncWriteService().submit(this);
          executeAsyncWrite(token);
        }
      }
 catch (      InterruptedException ex) {
        return;
      }
catch (      Throwable ex) {
        if (!started.get() || destroyed.get()) {
          logger.trace("Failed to execute a write operation. Broadcaster is destroyed or not yet started for Broadcaster {}",getID(),ex);
          return;
        }
 else {
          if (token != null) {
            logger.warn("This message {} will be lost, adding it to the BroadcasterCache",token.msg);
            cacheLostMessage(token.resource,token);
          }
          logger.debug("Failed to execute a write operation for Broadcaster {}",getID(),ex);
        }
      }
    }
  }
;
}
