{
  boolean notifyListeners=true;
  try {
    final AtmosphereResourceEventImpl event=(AtmosphereResourceEventImpl)resource.getAtmosphereResourceEvent();
    event.setMessage(msg);
    try {
      try {
        HttpServletRequest.class.cast(resource.getRequest()).setAttribute(MAX_INACTIVE,System.currentTimeMillis());
      }
 catch (      Exception ex) {
        logger.warn("Invalid AtmosphereResource state {}",event);
        removeAtmosphereResource(resource);
        BroadcasterFactory.getDefault().removeAllAtmosphereResource(resource);
        return;
      }
    }
 catch (    Exception t) {
      logger.debug("Preventing corruption of a recycled request: resource" + resource,event);
      removeAtmosphereResource(resource);
      BroadcasterFactory.getDefault().removeAllAtmosphereResource(resource);
      event.setCancelled(true);
      event.setThrowable(t);
      return;
    }
    broadcast(resource,event);
  }
  finally {
    if (notifyListeners) {
      resource.notifyListeners();
    }
    if (future != null) {
      future.done();
    }
  }
}
