{
  AtmosphereResourceEvent e=null;
synchronized (r) {
    if (r.getAtmosphereResourceEvent().isCancelled()) {
      return;
    }
    trackBroadcastMessage(r,msg);
    e=r.getAtmosphereResourceEvent();
    if (Callable.class.isAssignableFrom(msg.getClass())) {
      try {
        msg=Callable.class.cast(msg).call();
      }
 catch (      Exception e1) {
        LoggerUtils.getLogger().log(Level.SEVERE,"",e);
      }
    }
    e.setMessage(msg);
    if (r.getAtmosphereResourceEvent() != null && !r.getAtmosphereResourceEvent().isCancelled() && HttpServletRequest.class.isAssignableFrom(r.getRequest().getClass())) {
      try {
        HttpServletRequest.class.cast(r.getRequest()).setAttribute(CometSupport.MAX_INACTIVE,(Long)System.currentTimeMillis());
      }
 catch (      Throwable t) {
        if (LoggerUtils.getLogger().isLoggable(Level.FINE)) {
          LoggerUtils.getLogger().log(Level.FINE,"Preventing corruption of a recycled request",e);
          events.remove(r);
          return;
        }
      }
    }
    broadcast(r,e);
    if (r instanceof AtmosphereEventLifecycle) {
      ((AtmosphereEventLifecycle)r).notifyListeners();
    }
  }
}
