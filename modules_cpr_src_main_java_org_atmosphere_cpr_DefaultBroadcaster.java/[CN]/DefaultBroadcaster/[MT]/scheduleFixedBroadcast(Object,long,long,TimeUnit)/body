{
  if (destroyed.get()) {
    logger.debug(DESTROYED,getID(),"scheduleFixedBroadcast(final Object o, long waitFor, long period, TimeUnit t)");
    return null;
  }
  start();
  if (period == 0 || t == null) {
    return null;
  }
  final Object msg=filter(o);
  if (msg == null)   return null;
  final BroadcasterFuture<Object> f=new BroadcasterFuture<Object>(msg);
  return (Future<Object>)bc.getScheduledExecutorService().scheduleWithFixedDelay(new Runnable(){
    public void run(){
      if (Callable.class.isAssignableFrom(o.getClass())) {
        try {
          Object r=Callable.class.cast(o).call();
          final Object msg=filter(r);
          if (msg != null) {
            Deliver deliver=new Deliver(msg,f,r);
            push(deliver);
          }
          return;
        }
 catch (        Exception e) {
          logger.error("",e);
        }
      }
      final Object msg=filter(o);
      final Deliver e=new Deliver(msg,f,o);
      push(e);
    }
  }
,waitFor,period,t);
}
