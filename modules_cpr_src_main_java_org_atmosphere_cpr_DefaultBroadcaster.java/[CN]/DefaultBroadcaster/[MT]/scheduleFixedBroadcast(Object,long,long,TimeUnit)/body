{
  if (destroyed.get())   throw new IllegalStateException("This Broadcaster has been destroyed and cannot be used");
  if (period == 0 || t == null) {
    return null;
  }
  final Object msg=filter(o);
  if (msg == null)   return null;
  final Entry e=new Entry(o,null,null);
  return bc.getScheduledExecutorService().scheduleWithFixedDelay(new Runnable(){
    public void run(){
      if (Callable.class.isAssignableFrom(o.getClass())) {
        try {
          Object r=Callable.class.cast(o).call();
          if (r != null) {
            Entry entry=new Entry(r,null,null);
            push(entry);
          }
          return;
        }
 catch (        Exception e1) {
          LoggerUtils.getLogger().log(Level.SEVERE,"",e);
        }
      }
      push(e);
    }
  }
,waitFor,period,t);
}
