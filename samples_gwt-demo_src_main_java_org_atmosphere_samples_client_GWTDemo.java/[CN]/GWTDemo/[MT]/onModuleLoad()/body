{
  Button button=new Button("Broadcast");
  button.addClickHandler(new ClickHandler(){
    @Override public void onClick(    ClickEvent event){
      sendMessage();
    }
  }
);
  Button post=new Button("Post");
  post.addClickHandler(new ClickHandler(){
    @Override public void onClick(    ClickEvent event){
      client.post(new Event(count++,"This was send using the post mechanism"));
    }
  }
);
  Button pollButton=new Button("Poll");
  pollButton.addClickHandler(new ClickHandler(){
    @Override public void onClick(    ClickEvent event){
      polling.pollDelayed(3000,new AsyncCallback<Event>(){
        @Override public void onFailure(        Throwable caught){
          logger.log(Level.SEVERE,"Failed to poll",caught);
        }
        @Override public void onSuccess(        Event result){
          Info.display("Polling message received: " + result.getCode(),result.getData());
        }
      }
);
    }
  }
);
  RootPanel.get("buttons").add(button);
  RootPanel.get("buttons").add(post);
  RootPanel.get("buttons").add(pollButton);
  initialize();
  startButton=new Button("Start");
  stopButton=new Button("Stop");
  startButton.setEnabled(false);
  startButton.addClickHandler(new ClickHandler(){
    @Override public void onClick(    ClickEvent event){
      toggleStartStop(true);
      client.start();
    }
  }
);
  stopButton.addClickHandler(new ClickHandler(){
    @Override public void onClick(    ClickEvent event){
      toggleStartStop(false);
      client.stop();
    }
  }
);
  RootPanel.get("buttons").add(startButton);
  RootPanel.get("buttons").add(stopButton);
}
