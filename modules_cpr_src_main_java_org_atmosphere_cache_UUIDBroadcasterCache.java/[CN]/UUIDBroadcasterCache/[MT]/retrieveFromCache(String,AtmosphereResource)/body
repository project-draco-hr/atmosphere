{
  String clientId=uuid(r);
  if (!bannedResources.isEmpty()) {
    List<String> list=bannedResources.get(broadcasterId);
    if (list != null && list.contains(r.uuid())) {
      logger.debug("Resource {} is not allowed to retrieve message with broadcaster ",r.uuid(),broadcasterId);
      return emptyList;
    }
  }
  long now=System.currentTimeMillis();
  List<Object> result=new ArrayList<Object>();
  ClientQueue clientQueue;
synchronized (messages) {
    activeClients.put(clientId,now);
    clientQueue=messages.remove(clientId);
  }
  List<CacheMessage> clientMessages;
  if (clientQueue == null) {
    clientMessages=Collections.emptyList();
  }
 else {
    clientMessages=clientQueue.getQueue();
  }
  for (  CacheMessage cacheMessage : clientMessages) {
    result.add(cacheMessage.getMessage());
  }
  if (logger.isTraceEnabled()) {
synchronized (messages) {
      logger.trace("Retrieved for AtmosphereResource {} cached messages {}",r.uuid(),result);
      logger.trace("Available cached message {}",messages);
    }
  }
  return result;
}
