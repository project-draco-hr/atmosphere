{
  long now=System.currentTimeMillis();
  Set<String> inactiveClients=new HashSet<>();
  for (  Map.Entry<String,Long> entry : activeClients.entrySet()) {
    if (now - entry.getValue() > clientIdleTime) {
      logger.trace("Invalidate client {}",entry.getKey());
      inactiveClients.add(entry.getKey());
    }
  }
  for (  String clientId : inactiveClients) {
    activeClients.remove(clientId);
    ConcurrentLinkedQueue<CacheMessage> queue=messages.remove(clientId);
    if (queue != null) {
      logger.debug("removed  client queue of size: {} for client uuid {}",queue.size(),clientId);
      notifyRemoveCache(queue);
    }
 else {
      logger.trace("queue is already null for client: {}",clientId);
    }
  }
  for (  String clientId : messages().keySet()) {
    if (!activeClients().containsKey(clientId)) {
      messages().get(clientId).clear();
    }
  }
}
