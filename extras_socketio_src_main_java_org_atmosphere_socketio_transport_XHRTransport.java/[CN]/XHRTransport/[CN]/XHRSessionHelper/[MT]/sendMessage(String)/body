{
  logger.trace("Session[" + session.getSessionId() + "]: "+ "sendMessage(String): "+ message);
synchronized (this) {
    if (is_open) {
      AtmosphereResourceImpl resource=session.getAtmosphereResourceImpl();
      logger.trace("Session[" + session.getSessionId() + "]: "+ resource.getRequest().getMethod()+ "sendMessage");
      try {
        writeData(resource.getResponse(),message);
      }
 catch (      Exception e) {
        if (!resource.isCancelled()) {
          logger.trace("calling from " + this.getClass().getName() + " : "+ "sendMessage ON FORCE UN RESUME");
          try {
            finishSend(resource.getResponse());
          }
 catch (          IOException ex) {
            logger.trace("",ex);
          }
          resource.resume();
        }
        throw new SocketIOException(e);
      }
      if (!isStreamingConnection) {
        try {
          finishSend(resource.getResponse());
        }
 catch (        IOException e) {
          logger.trace("",e);
        }
        resource.resume();
      }
 else {
        logger.trace("calling from " + this.getClass().getName() + " : "+ "sendMessage");
        session.startHeartbeatTimer();
      }
    }
 else {
      logger.trace("calling from " + this.getClass().getName() + " : "+ "SocketIOClosedException sendMessage");
      throw new SocketIOClosedException();
    }
  }
}
