{
  final ClassLoader classLoader=Thread.currentThread().getContextClassLoader();
  final Set<File> files=new HashSet<File>();
  for (  final String packageName : packageNames) {
    String internalPackageName=packageName.replace('.','/');
    if (!internalPackageName.endsWith("/")) {
      internalPackageName=internalPackageName.concat("/");
    }
    Enumeration<URL> resourceEnum=classLoader.getResources(internalPackageName);
    if (!resourceEnum.hasMoreElements()) {
      resourceEnum=this.getClass().getClassLoader().getResources(internalPackageName);
    }
    while (resourceEnum.hasMoreElements()) {
      final URL url=resourceEnum.nextElement();
      final boolean isVfs=("vfs".equals(url.getProtocol()) || "vfsfile".equals(url.getProtocol()));
      if ("file".equals(url.getProtocol()) || isVfs) {
        final File dir=toFile(url);
        if (dir.isDirectory()) {
          files.add(dir);
          if (DEBUG)           print("Add directory: '%s'",dir);
        }
 else         if (isVfs) {
          String jarPath=dir.getPath();
          final int idx=jarPath.indexOf(".jar");
          if (idx > -1) {
            jarPath=jarPath.substring(0,idx + 4);
            final File jarFile=new File(jarPath);
            if (jarFile.isFile() && jarFile.exists()) {
              files.add(jarFile);
              if (DEBUG)               print("Add jar file from VFS: '%s'",jarFile);
            }
 else {
              List<VirtualFile> vfs=org.jboss.vfs.VFS.getChild(dir.getPath()).getChildren();
              for (              org.jboss.vfs.VirtualFile f : vfs) {
                files.add(f.getPhysicalFile());
              }
            }
          }
        }
      }
 else {
        File jarFile;
        try {
          jarFile=toFile(((JarURLConnection)url.openConnection()).getJarFileURL());
        }
 catch (        ClassCastException cce) {
          try {
            String u=url.toExternalForm();
            if (u.startsWith("zip:")) {
              u=u.substring(4);
              if (!u.startsWith("file:")) {
                u="file:" + u;
              }
              u=u.substring(0,u.indexOf("!"));
            }
            jarFile=toFile(new URL(u));
          }
 catch (          Exception ex) {
            throw new AssertionError("Not a File: " + url.toExternalForm());
          }
        }
        if (jarFile.isFile()) {
          files.add(jarFile);
          if (DEBUG)           print("Add jar file: '%s'",jarFile);
        }
 else {
          throw new AssertionError("Not a File: " + jarFile);
        }
      }
    }
  }
}
