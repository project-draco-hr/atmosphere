{
  String permutationStrongName=request.getParameter(Constants.STRONG_NAME_PARAMETER);
  if (permutationStrongName == null) {
    return null;
  }
  ClientOracle toReturn;
synchronized (clientOracleCache) {
    if (clientOracleCache.containsKey(permutationStrongName)) {
      toReturn=clientOracleCache.get(permutationStrongName).get();
      if (toReturn != null) {
        return toReturn;
      }
    }
    if ("HostedMode".equals(permutationStrongName)) {
      toReturn=new HostedModeClientOracle();
    }
 else {
      String moduleBase=request.getParameter(Constants.MODULE_BASE_PARAMETER);
      if (moduleBase == null) {
        return null;
      }
      String basePath=new URL(moduleBase).getPath();
      if (basePath == null) {
        throw new MalformedURLException("Blocked request without GWT base path parameter (XSRF attack?)");
      }
      String contextPath=context.getContextPath();
      if (!basePath.startsWith(contextPath)) {
        throw new MalformedURLException("Blocked request with invalid GWT base path parameter (XSRF attack?)");
      }
      basePath=basePath.substring(contextPath.length());
      InputStream in=findClientOracleData(basePath,permutationStrongName,context);
      toReturn=WebModeClientOracle.load(in);
    }
    clientOracleCache.put(permutationStrongName,new SoftReference<ClientOracle>(toReturn));
  }
  return toReturn;
}
