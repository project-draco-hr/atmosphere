{
  if (id == null)   throw new NullPointerException("id is null");
  if (c == null)   throw new NullPointerException("Class is null");
  if (getBroadcaster(id) != null)   throw new IllegalStateException("Broadcaster already existing " + id + ". Use BroadcasterFactory.lookup instead");
  Broadcaster b=null;
synchronized (id) {
    try {
      b=c.getConstructor(String.class,AtmosphereServlet.AtmosphereConfig.class).newInstance(id.toString(),config);
    }
 catch (    Throwable t) {
      throw new BroadcasterCreationException(t);
    }
    InjectorProvider.getInjector().inject(b);
    b.setBroadcasterConfig(new BroadcasterConfig(AtmosphereServlet.broadcasterFilters,config));
    b.setBroadcasterLifeCyclePolicy(policy);
    if (DefaultBroadcaster.class.isAssignableFrom(clazz)) {
      DefaultBroadcaster.class.cast(b).start();
    }
    store.put(id,b);
    logger.debug("Added Broadcaster {} . Factory size: {}",id,store.size());
  }
  return b;
}
