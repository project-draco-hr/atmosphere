{
  if (destroyed.get()) {
    throw new IllegalStateException("This Broadcaster has been destroyed and cannot be used");
  }
  try {
    logger.info("To broadcast from : " + ((HttpServletRequest)resource.getRequest()).getAttribute(SocketIOAtmosphereHandler.SOCKETIO_SESSION_ID) + " message to broadcast : "+ msg);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  Set<AtmosphereResource> sub=new HashSet<AtmosphereResource>();
  sub.addAll(resources);
  sub.remove(resource);
  start();
  Object newMsg=filter(msg);
  if (newMsg == null) {
    return null;
  }
  BroadcasterFuture<Object> f=new BroadcasterFuture<Object>(newMsg);
  messages.offer(new Entry(newMsg,sub,f,msg));
  return f;
}
