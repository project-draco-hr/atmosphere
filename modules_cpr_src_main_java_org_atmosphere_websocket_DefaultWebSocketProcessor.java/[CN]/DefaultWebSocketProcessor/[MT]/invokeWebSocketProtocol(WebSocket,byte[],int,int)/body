{
  WebSocketHandler webSocketHandler=webSocket.webSocketHandler();
  if (webSocketHandler == null) {
    if (!WebSocketProtocolStream.class.isAssignableFrom(webSocketProtocol.getClass())) {
      List<AtmosphereRequest> list=webSocketProtocol.onMessage(webSocket,data,offset,length);
      dispatch(webSocket,list);
    }
 else {
      logger.debug("The WebServer doesn't support streaming. Wrapping the message as stream.");
      invokeWebSocketProtocol(webSocket,new ByteArrayInputStream(data,offset,length));
      return;
    }
  }
 else {
    if (!WebSocketStreamingHandler.class.isAssignableFrom(webSocketHandler.getClass())) {
      AtmosphereResource r=webSocket.resource();
      try {
        webSocketHandler.onByteMessage(webSocket,data,offset,length);
      }
 catch (      Exception ex) {
        logger.error("",ex);
        webSocketHandler.onError(webSocket,new WebSocketException(ex,new AtmosphereResponse.Builder().request(r != null ? r.getRequest() : null).status(500).statusMessage("Server Error").build()));
      }
    }
 else {
      logger.debug("The WebServer doesn't support streaming. Wrapping the message as stream.");
      invokeWebSocketProtocol(webSocket,new ByteArrayInputStream(data,offset,length));
      return;
    }
  }
  notifyListener(webSocket,new WebSocketEventListener.WebSocketEvent<byte[]>(data,MESSAGE,webSocket));
}
