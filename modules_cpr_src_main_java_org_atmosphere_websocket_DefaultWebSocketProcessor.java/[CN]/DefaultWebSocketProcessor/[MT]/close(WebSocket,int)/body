{
  logger.trace("WebSocket closed with {}",closeCode);
  WebSocketHandler webSocketHandler=webSocket.webSocketHandler();
  closeCode=closeCode(closeCode);
  notifyListener(webSocket,new WebSocketEventListener.WebSocketEvent(closeCode,CLOSE,webSocket));
  AtmosphereResourceImpl resource=(AtmosphereResourceImpl)webSocket.resource();
  if (resource == null) {
    logger.warn("Unable to retrieve AtmosphereResource for {}",webSocket);
  }
 else {
    AtmosphereRequest r=resource.getRequest(false);
    AtmosphereResponse s=resource.getResponse(false);
    try {
      webSocketProtocol.onClose(webSocket);
      if (resource != null && resource.isInScope()) {
        if (webSocketHandler != null) {
          webSocketHandler.onClose(webSocket);
        }
        AsynchronousProcessor.AsynchronousProcessorHook h=(AsynchronousProcessor.AsynchronousProcessorHook)r.getAttribute(ASYNCHRONOUS_HOOK);
        if (!resource.isCancelled() && h != null) {
          if (closeCode == 1005) {
            h.closed();
          }
 else {
            h.timedOut();
          }
          resource.setIsInScope(false);
          try {
            resource.cancel();
          }
 catch (          IOException e) {
            logger.trace("",e);
          }
        }
        AtmosphereResourceImpl.class.cast(resource)._destroy();
      }
    }
  finally {
      if (r != null) {
        r.destroy(true);
      }
      if (s != null) {
        s.destroy(true);
      }
      if (webSocket != null) {
        try {
          webSocket.resource(null).close(s);
        }
 catch (        IOException e) {
          logger.trace("",e);
        }
      }
    }
  }
}
