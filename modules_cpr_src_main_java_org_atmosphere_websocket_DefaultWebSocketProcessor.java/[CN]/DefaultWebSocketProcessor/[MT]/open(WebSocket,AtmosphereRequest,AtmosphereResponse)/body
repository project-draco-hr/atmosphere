{
  if (framework.getAtmosphereConfig().handlers().size() == 0) {
    framework.addAtmosphereHandler("/*",REFLECTOR_ATMOSPHEREHANDLER);
  }
  request.headers(configureHeader(request)).setAttribute(WebSocket.WEBSOCKET_SUSPEND,true);
  AtmosphereResource r=AtmosphereResourceFactory.getDefault().create(framework.getAtmosphereConfig(),response,framework.getAsyncSupport());
  request.setAttribute(INJECTED_ATMOSPHERE_RESOURCE,r);
  request.setAttribute(SUSPENDED_ATMOSPHERE_RESOURCE_UUID,r.uuid());
  webSocket.resource(r);
  webSocketProtocol.onOpen(webSocket);
  WebSocketHandler proxy=null;
  if (handlers.size() != 0) {
    WebSocketHandlerProxy handler=mapper.map(request,handlers);
    if (handler == null) {
      logger.debug("No WebSocketHandler maps request for {} with mapping {}",request.getRequestURI(),handlers);
      throw new AtmosphereMappingException("No AtmosphereHandler maps request for " + request.getRequestURI());
    }
    proxy=postProcessMapping(webSocket,request,handler);
  }
  dispatch(webSocket,request,response);
  if (proxy != null) {
    proxy.onOpen(webSocket);
    webSocket.webSocketHandler(proxy).resource().suspend(-1);
  }
  request.removeAttribute(INJECTED_ATMOSPHERE_RESOURCE);
  if (webSocket.resource() != null) {
    final AsynchronousProcessor.AsynchronousProcessorHook hook=new AsynchronousProcessor.AsynchronousProcessorHook((AtmosphereResourceImpl)webSocket.resource());
    request.setAttribute(ASYNCHRONOUS_HOOK,hook);
    final Action action=((AtmosphereResourceImpl)webSocket.resource()).action();
    if (action.timeout() != -1 && !framework.getAsyncSupport().getContainerName().contains("Netty")) {
      final AtomicReference<Future<?>> f=new AtomicReference();
      f.set(scheduler.scheduleAtFixedRate(new Runnable(){
        @Override public void run(){
          if (WebSocket.class.isAssignableFrom(webSocket.getClass()) && System.currentTimeMillis() - WebSocket.class.cast(webSocket).lastWriteTimeStampInMilliseconds() > action.timeout()) {
            hook.timedOut();
            f.get().cancel(true);
          }
        }
      }
,action.timeout(),action.timeout(),TimeUnit.MILLISECONDS));
    }
    if (!webSocket.resource().isSuspended()) {
      webSocket.resource().suspend();
    }
  }
 else {
    logger.warn("AtmosphereResource was null");
  }
  notifyListener(webSocket,new WebSocketEventListener.WebSocketEvent("",CONNECT,webSocket));
}
