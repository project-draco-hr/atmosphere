{
  AtmosphereResource resource=webSocket.resource();
  if (resource == null)   return;
  AtmosphereResourceImpl r=AtmosphereResourceImpl.class.cast(resource);
  for (  AtmosphereResourceEventListener l : r.atmosphereResourceEventListener()) {
    if (WebSocketEventListener.class.isAssignableFrom(l.getClass())) {
      try {
switch (event.type()) {
case CONNECT:
          WebSocketEventListener.class.cast(l).onConnect(event);
        break;
case DISCONNECT:
      WebSocketEventListener.class.cast(l).onDisconnect(event);
    break;
case CONTROL:
  WebSocketEventListener.class.cast(l).onControl(event);
break;
case MESSAGE:
WebSocketEventListener.class.cast(l).onMessage(event);
break;
case HANDSHAKE:
WebSocketEventListener.class.cast(l).onHandshake(event);
break;
case CLOSE:
if (Integer.class.getClass().isAssignableFrom(event.message().getClass())) {
boolean isClosedByClient=Integer.class.cast(event.message()) == 1000 ? true : false;
l.onDisconnect(new AtmosphereResourceEventImpl(r,!isClosedByClient,false,isClosedByClient,null));
}
WebSocketEventListener.class.cast(l).onDisconnect(event);
WebSocketEventListener.class.cast(l).onClose(event);
break;
}
}
 catch (Throwable t) {
logger.debug("Listener error {}",t);
try {
WebSocketEventListener.class.cast(l).onThrowable(new AtmosphereResourceEventImpl(r,false,false,t));
}
 catch (Throwable t2) {
logger.warn("Listener error {}",t2);
}
}
}
}
}
