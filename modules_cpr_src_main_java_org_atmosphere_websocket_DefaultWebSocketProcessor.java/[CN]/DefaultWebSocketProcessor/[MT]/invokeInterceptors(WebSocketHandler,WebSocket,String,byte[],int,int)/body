{
  AtmosphereResourceImpl resource=AtmosphereResourceImpl.class.cast(webSocket.resource());
  if (resource == null) {
    return;
  }
  AtmosphereRequest request=resource.getRequest(false);
  if (webSocketBinary == null) {
    request.body(webSocketMessage);
  }
 else {
    request.body(new ByteArrayInputStream(webSocketBinary,offset,length));
  }
  Action a=asynchronousProcessor.invokeInterceptors(framework.interceptors(),resource);
  if (a.type() != Action.TYPE.CONTINUE && a.type() != Action.TYPE.SKIP_ATMOSPHEREHANDLER) {
    return;
  }
  WebSocketHandlerProxy proxy=WebSocketHandlerProxy.class.cast(webSocketHandler);
  if (a.type() != Action.TYPE.SKIP_ATMOSPHEREHANDLER) {
    a=asynchronousProcessor.invokeInterceptors(proxy.interceptors(),resource);
    if (a.type() != Action.TYPE.CONTINUE) {
      return;
    }
  }
  boolean skipAtmosphereHandler=request.getAttribute(SKIP_ATMOSPHEREHANDLER.name()) != null ? (Boolean)request.getAttribute(SKIP_ATMOSPHEREHANDLER.name()) : Boolean.FALSE;
  if (!skipAtmosphereHandler) {
    try {
      if (webSocketBinary == null) {
        webSocketHandler.onTextMessage(webSocket,webSocketMessage);
      }
 else {
        webSocketHandler.onByteMessage(webSocket,webSocketBinary,offset,length);
      }
    }
 catch (    IOException t) {
      resource.onThrowable(t);
      throw t;
    }
    asynchronousProcessor.postInterceptors(proxy.interceptors(),resource);
  }
  asynchronousProcessor.postInterceptors(framework.interceptors(),resource);
}
