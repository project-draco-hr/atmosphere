{
  if (!((AsynchronousProcessor)framework.getAsyncSupport()).wildcardMapping())   return w;
  String path;
  String pathInfo=null;
  try {
    pathInfo=request.getPathInfo();
  }
 catch (  IllegalStateException ex) {
  }
  if (pathInfo != null) {
    path=request.getServletPath() + pathInfo;
  }
 else {
    path=request.getServletPath();
  }
  if (path == null || path.isEmpty()) {
    path="/";
  }
synchronized (handlers) {
    if (handlers.get(path) == null) {
      if (w.getClass().getAnnotation(WebSocketHandlerService.class) != null) {
        String targetPath=w.getClass().getAnnotation(WebSocketHandlerService.class).path();
        if (targetPath.indexOf("{") != -1 && targetPath.indexOf("}") != -1) {
          try {
            boolean singleton=w.getClass().getAnnotation(Singleton.class) != null;
            if (!singleton) {
              registerWebSocketHandler(path,w.getClass().newInstance());
            }
 else {
              registerWebSocketHandler(path,w);
            }
            return handlers.get(path);
          }
 catch (          Throwable e) {
            logger.warn("Unable to create WebSocketHandler",e);
          }
        }
      }
    }
  }
  return w;
}
