{
  final CountDownLatch latch=new CountDownLatch(1000);
  final AtomicInteger created=new AtomicInteger();
  factory.addBroadcasterListener(new BroadcasterListenerAdapter(){
    @Override public void onPostCreate(    Broadcaster b){
      created.incrementAndGet();
      latch.countDown();
    }
    @Override public void onComplete(    Broadcaster b){
    }
    @Override public void onPreDestroy(    Broadcaster b){
    }
  }
);
  final ConcurrentLinkedQueue c=new ConcurrentLinkedQueue();
  ExecutorService r=Executors.newCachedThreadPool();
  try {
    for (int i=0; i < 1000; i++) {
      r.submit(new Runnable(){
        @Override public void run(){
          try {
            c.add(factory.get(new String("me")));
          }
 catch (          IllegalStateException ex) {
            latch.countDown();
          }
        }
      }
);
    }
  }
  finally {
    r.shutdown();
  }
  latch.await(10,TimeUnit.SECONDS);
  try {
    assertEquals(latch.getCount(),0);
    assertEquals(c.size(),1000);
    assertEquals(created.get(),1000);
  }
  finally {
    factory.destroy();
  }
}
