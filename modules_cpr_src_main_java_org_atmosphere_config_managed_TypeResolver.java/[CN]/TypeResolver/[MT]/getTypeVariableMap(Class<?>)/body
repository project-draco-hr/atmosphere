{
  Reference<Map<TypeVariable<?>,Type>> ref=typeVariableCache.get(targetType);
  Map<TypeVariable<?>,Type> map=ref != null ? ref.get() : null;
  if (map == null) {
    map=new HashMap<TypeVariable<?>,Type>();
    buildTypeVariableMap(targetType.getGenericInterfaces(),map);
    Type genericType=targetType.getGenericSuperclass();
    Class<?> type=targetType.getSuperclass();
    while (type != null && !Object.class.equals(type)) {
      if (genericType instanceof ParameterizedType)       buildTypeVariableMap((ParameterizedType)genericType,map);
      buildTypeVariableMap(type.getGenericInterfaces(),map);
      genericType=type.getGenericSuperclass();
      type=type.getSuperclass();
    }
    type=targetType;
    while (type.isMemberClass()) {
      genericType=type.getGenericSuperclass();
      if (genericType instanceof ParameterizedType)       buildTypeVariableMap((ParameterizedType)genericType,map);
      type=type.getEnclosingClass();
    }
    if (cacheEnabled)     typeVariableCache.put(targetType,new WeakReference<Map<TypeVariable<?>,Type>>(map));
  }
  return map;
}
