{
  final Meteor m=Meteor.build(req);
  m.suspend(5000,false);
  m.getBroadcaster().setScope(Broadcaster.SCOPE.REQUEST);
  req.getSession().setAttribute("meteor",m);
  broadcasterId.set(m.getBroadcaster().getID());
  res.getOutputStream().write("resume".getBytes());
  m.addListener(new AtmosphereResourceEventListener(){
    @Override public void onSuspend(    final AtmosphereResourceEvent<HttpServletRequest,HttpServletResponse> event){
      event.getResource().getRequest().setAttribute(ApplicationConfig.RESUME_ON_BROADCAST,"true");
    }
    @Override public void onResume(    AtmosphereResourceEvent<HttpServletRequest,HttpServletResponse> event){
    }
    @Override public void onDisconnect(    AtmosphereResourceEvent<HttpServletRequest,HttpServletResponse> event){
    }
    @Override public void onBroadcast(    AtmosphereResourceEvent<HttpServletRequest,HttpServletResponse> event){
    }
    @Override public void onThrowable(    AtmosphereResourceEvent<HttpServletRequest,HttpServletResponse> event){
    }
  }
);
  if (servletLatch != null) {
    servletLatch.countDown();
  }
}
