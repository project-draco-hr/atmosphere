{
  if (config != null || BroadcasterFactory.getDefault() != null) {
    Collection<Broadcaster> c=config != null ? config.getBroadcasterFactory().lookupAll() : BroadcasterFactory.getDefault().lookupAll();
    final Map<String,String> m=new HashMap<String,String>();
    List<Broadcaster> l=new ArrayList<Broadcaster>();
    logger.trace("Map {}",path);
    UriTemplate t=null;
    try {
      t=new UriTemplate(path);
      for (      Broadcaster b : c) {
        logger.trace("Trying to map {} to {}",t,b.getID());
        if (t.match(b.getID(),m)) {
          l.add(b);
        }
        m.clear();
      }
    }
  finally {
      if (t != null)       t.destroy();
    }
    if (l.isEmpty() && cacheMessage) {
      if (NoCache.class.isAssignableFrom(cache.getClass())) {
        logger.warn("No Broadcaster matches {}. Message {} WILL BE LOST. " + "Make sure you cache it or make sure the Broadcaster exists before.",path,message);
      }
 else {
        cache.cache(path,message);
      }
      return E;
    }
    MetaBroadcasterFuture f=new MetaBroadcasterFuture(l);
    CompleteListener cl=new CompleteListener(f);
    for (    Broadcaster b : l) {
      if (time <= 0) {
        f.outerFuture(b.addBroadcasterListener(cl).broadcast(message));
      }
 else       if (!delay) {
        f.outerFuture(b.scheduleFixedBroadcast(message,time,unit));
      }
 else {
        f.outerFuture(b.delayBroadcast(message,time,unit));
      }
    }
    return f;
  }
 else {
    return E;
  }
}
