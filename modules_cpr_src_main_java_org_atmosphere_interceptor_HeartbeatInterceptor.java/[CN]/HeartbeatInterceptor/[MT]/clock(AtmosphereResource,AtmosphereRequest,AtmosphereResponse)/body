{
  request.setAttribute("heartbeat.future",heartBeat.schedule(new Callable<Object>(){
    @Override public Object call() throws Exception {
      logger.trace("Writing heartbeat for {}",r.uuid());
      if (r.isSuspended()) {
        try {
          response.write(paddingText,false);
          if (r.transport().equals(TRANSPORT.LONG_POLLING) || r.transport().equals(TRANSPORT.JSONP)) {
            r.resume();
          }
 else {
            response.flushBuffer();
          }
        }
 catch (        Throwable t) {
          logger.trace("{}",r.uuid(),t);
          try {
            AtmosphereResourceImpl.class.cast(r).cancel();
            r.notifyListeners(new AtmosphereResourceEventImpl(AtmosphereResourceImpl.class.cast(r),true,false));
          }
 catch (          IOException e) {
            logger.trace("{}",e);
          }
          ;
          cancelF(request);
        }
      }
 else {
        cancelF(request);
      }
      return null;
    }
  }
,heartbeatFrequencyInSeconds,TimeUnit.SECONDS));
  return this;
}
