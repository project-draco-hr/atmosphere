{
  AtmosphereRequest request=resource.getRequest();
  String method=request.getMethod();
  boolean polling=Utils.pollableTransport(resource.transport());
  if (onReadyMethod != null && !polling) {
    resource.addEventListener(new OnSuspend(){
      @Override public void onSuspend(      AtmosphereResourceEvent event){
        processReady(event.getResource());
        resource.removeEventListener(this);
      }
    }
);
  }
  if (onResumeMethod != null && !polling) {
    resource.addEventListener(new OnResume(){
      @Override public void onResume(      AtmosphereResourceEvent event){
        invoke(onResumeMethod,event.getResource());
        resource.removeEventListener(this);
      }
    }
);
  }
  resource.addEventListener(new OnClose(){
    @Override public void onClose(    AtmosphereResourceEvent event){
      invoke(onDisconnectMethod,event);
    }
  }
);
  if (method.equalsIgnoreCase("get")) {
    invoke(onGetMethod,resource);
  }
 else   if (method.equalsIgnoreCase("post")) {
    String body=null;
    if (onPostMethod != null) {
      body=IOUtils.readEntirely(resource).toString();
      resource.getRequest().body(body);
      invoke(onPostMethod,resource);
    }
    Object o=message(resource,body);
    if (o != null) {
      resource.getBroadcaster().broadcast(new Managed(o));
    }
  }
 else   if (method.equalsIgnoreCase("delete")) {
    invoke(onDeleteMethod,resource);
  }
 else   if (method.equalsIgnoreCase("put")) {
    invoke(onPutMethod,resource);
  }
}
