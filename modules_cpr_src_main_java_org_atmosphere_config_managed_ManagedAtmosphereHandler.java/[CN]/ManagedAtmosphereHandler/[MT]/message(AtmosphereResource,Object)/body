{
  try {
    AtmosphereRequest request=resource.getRequest();
    AtmosphereRequest.Body body=request.body();
    for (    MethodInfo m : onRuntimeMethod) {
      if (m.useReader) {
        o=resource.getRequest().getReader();
      }
 else       if (m.useStream) {
        o=resource.getRequest().getInputStream();
      }
 else       if (o == null) {
        if (body.hasString()) {
          o=readEntirelyAsString(resource).toString();
          if (String.class.cast(o).isEmpty()) {
            logger.warn("{} received an empty body",ManagedServiceInterceptor.class.getSimpleName());
            return null;
          }
        }
 else {
          o=readEntirelyAsByte(resource);
          if (o == null || ((byte[])o).length == 0) {
            logger.warn("{} received an empty body",ManagedServiceInterceptor.class.getSimpleName());
            return null;
          }
        }
      }
      Object decoded=Invoker.decode(decoders.get(m.method),o);
      if (decoded == null) {
        decoded=o;
      }
      Object objectToEncode=null;
      if (m.method.getParameterTypes().length > 2) {
        logger.warn("Injection of more than 2 parameters not supported {}",m);
      }
      if (m.method.getParameterTypes().length == 2) {
        objectToEncode=Invoker.invokeMethod(m.method,proxiedInstance,resource,decoded);
      }
 else {
        objectToEncode=Invoker.invokeMethod(m.method,proxiedInstance,decoded);
      }
      if (objectToEncode != null) {
        return Invoker.encode(encoders.get(m.method),objectToEncode);
      }
    }
  }
 catch (  Throwable t) {
    logger.error("",t);
  }
  return null;
}
