{
  AtmosphereRequest request=AtmosphereResourceImpl.class.cast(resource).getRequest(false);
  try {
    Method invokedMethod=(Method)request.getAttribute(getClass().getName());
    request.removeAttribute(getClass().getName());
    if (invokedMethod != null) {
      for (      MethodInfo m : onRuntimeMethod) {
        if (invokedMethod.equals(m.method)) {
          return m.encode(encoders,o);
        }
      }
    }
    for (    MethodInfo m : onRuntimeMethod) {
      if (m.useReader) {
        o=request.getReader();
      }
 else       if (m.useStream) {
        o=request.getInputStream();
      }
 else       if (o == null) {
        o=readEntirely(resource);
        if (isBodyEmpty(o)) {
          logger.warn("{} received an empty body",request);
          return null;
        }
      }
      Object decoded=Invoker.decode(decoders.get(m.method),o);
      if (decoded == null) {
        decoded=o;
      }
      Object objectToEncode=null;
      if (m.method.getParameterTypes().length > 2) {
        logger.warn("Injection of more than 2 parameters not supported {}",m);
      }
      if (invokedMethod == null) {
        if (m.method.getParameterTypes().length == 2) {
          request.setAttribute(getClass().getName(),m.method);
          objectToEncode=Invoker.invokeMethod(m.method,proxiedInstance,resource,decoded);
        }
 else {
          objectToEncode=Invoker.invokeMethod(m.method,proxiedInstance,decoded);
        }
      }
 else {
        objectToEncode=o;
      }
      if (objectToEncode != null) {
        return m.encode(encoders,objectToEncode);
      }
    }
  }
 catch (  Throwable t) {
    logger.error("",t);
  }
  return null;
}
