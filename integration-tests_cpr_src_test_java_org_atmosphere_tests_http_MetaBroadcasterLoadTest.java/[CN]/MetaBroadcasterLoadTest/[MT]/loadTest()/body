{
  TestBroadcaster a=(TestBroadcaster)factory.get("/a");
  final int run=10000;
  Thread[] threads=new Thread[10];
  final CountDownLatch latch=new CountDownLatch(run);
  BroadcasterListener l=new BroadcasterListener(){
    @Override public void onPostCreate(    Broadcaster b){
    }
    @Override public void onComplete(    Broadcaster b){
      latch.countDown();
    }
    @Override public void onPreDestroy(    Broadcaster b){
    }
  }
;
  MetaBroadcaster.getDefault().addBroadcasterListener(l);
  for (int i=0; i < threads.length; i++) {
    threads[i]=new Thread(new Runnable(){
      @Override public void run(){
        for (int i=0; i < run; i++) {
          MetaBroadcaster.getDefault().broadcastTo("/*","a-" + Math.random());
        }
      }
    }
);
    threads[i].start();
  }
  for (int i=0; i < threads.length; i++) {
    threads[i].join();
  }
  latch.await();
  while (a.messages().size() != 0) {
    Thread.sleep(1000);
  }
  assertEquals(a.messages().size(),0);
}
