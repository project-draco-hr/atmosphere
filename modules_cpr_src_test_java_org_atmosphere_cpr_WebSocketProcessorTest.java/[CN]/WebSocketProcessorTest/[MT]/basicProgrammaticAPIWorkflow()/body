{
  ByteArrayOutputStream b=new ByteArrayOutputStream();
  final WebSocket w=new ArrayBaseWebSocket(b);
  final WebSocketProcessor processor=WebSocketProcessorFactory.getDefault().getWebSocketProcessor(framework);
  framework.addWebSocketHandler("/*",new WebSocketHandlerAdapter(){
    @Override public void onTextMessage(    WebSocket webSocket,    String data) throws IOException {
      webSocket.write(data);
    }
    @Override public void onOpen(    WebSocket webSocket) throws IOException {
      webSocket.write(webSocket.resource().getRequest().getReader().readLine());
    }
  }
);
  AtmosphereRequest request=new AtmosphereRequest.Builder().destroyable(false).body("yoComet").pathInfo("/a").build();
  processor.open(w,request,AtmosphereResponse.newInstance(framework.getAtmosphereConfig(),request,w));
  processor.invokeWebSocketProtocol(w,"yoWebSocket");
  BroadcasterFactory.getDefault().lookup("/*").broadcast("yoBroadcast").get();
  assertEquals(b.toString(),"yoCometyoWebSocketyoBroadcast");
}
