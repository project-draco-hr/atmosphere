{
  ByteArrayOutputStream b=new ByteArrayOutputStream();
  final WebSocket w=new ArrayBaseWebSocket(b);
  final WebSocketProcessor processor=WebSocketProcessorFactory.getDefault().getWebSocketProcessor(framework);
  framework.addAtmosphereHandler("/*",new AtmosphereHandler(){
    @Override public void onRequest(    AtmosphereResource resource) throws IOException {
      resource.getBroadcaster().addAtmosphereResource(resource.suspend());
      resource.getResponse().write(resource.getRequest().getReader().readLine());
    }
    @Override public void onStateChange(    AtmosphereResourceEvent event) throws IOException {
      event.getResource().write(event.getMessage().toString().getBytes());
    }
    @Override public void destroy(){
    }
  }
);
  AtmosphereRequest request=new AtmosphereRequest.Builder().destroyable(false).body("yoComet").pathInfo("/a").build();
  processor.open(w,request,AtmosphereResponse.newInstance(framework.getAtmosphereConfig(),request,w));
  processor.invokeWebSocketProtocol(w,"yoWebSocket");
  BroadcasterFactory.getDefault().lookup("/*").broadcast("yoBroadcast").get();
  assertEquals(b.toString(),"yoCometyoWebSocketyoBroadcast");
}
