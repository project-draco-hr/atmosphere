{
  AtmosphereResourceImpl resource=(AtmosphereResourceImpl)webSocket.resource();
  if (resource == null) {
    logger.trace("The WebSocket has been closed before the message was processed.");
    return null;
  }
  String pathInfo=resource.getRequest().getPathInfo();
  if (d.startsWith(delimiter)) {
    String[] token=d.split(delimiter);
    pathInfo=token[1];
    d=token[2];
  }
  Map<String,Object> m=new HashMap<String,Object>();
  m.put(FrameworkConfig.WEBSOCKET_SUBPROTOCOL,FrameworkConfig.SIMPLE_HTTP_OVER_WEBSOCKET);
  m.putAll(resource.getRequest().attributes());
  List<AtmosphereRequest> list=new ArrayList<AtmosphereRequest>();
  list.add(new AtmosphereRequest.Builder().request(resource.getRequest()).method(methodType).contentType(contentType).body(d).attributes(m).pathInfo(pathInfo).destroyable(destroyable).headers(resource.getRequest().headersMap()).session(resource.session()).build());
  return list;
}
