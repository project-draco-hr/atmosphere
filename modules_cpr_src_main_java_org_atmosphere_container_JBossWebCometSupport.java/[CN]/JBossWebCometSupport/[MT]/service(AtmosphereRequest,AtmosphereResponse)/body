{
  HttpEvent event=(HttpEvent)req.getAttribute(HTTP_EVENT);
  if (event == null) {
    throw unableToDetectComet;
  }
  Action action=null;
  if (event.getType() == HttpEvent.EventType.BEGIN) {
    action=suspended(req,res);
    if (action.type() == Action.TYPE.SUSPEND) {
      try {
        if (action.timeout() != -1) {
          event.setTimeout((int)action.timeout());
        }
 else {
          event.setTimeout(Integer.MAX_VALUE);
        }
        req.setAttribute(SUSPENDED,true);
      }
 catch (      UnsupportedOperationException ex) {
      }
    }
 else     if (action.type() == Action.TYPE.RESUME) {
      event.close();
    }
 else {
      event.close();
    }
  }
 else   if (event.getType() == HttpEvent.EventType.READ) {
  }
 else   if (event.getType() == HttpEvent.EventType.EOF) {
    if (req.getAttribute(SUSPENDED) != null && closeConnectionOnInputStream) {
      req.setAttribute(SUSPENDED,null);
      action=cancelled(req,res);
    }
 else {
      event.close();
    }
  }
 else   if (event.getType() == HttpEvent.EventType.ERROR) {
    event.close();
  }
 else   if (event.getType() == HttpEvent.EventType.END) {
    if (req.getAttribute(SUSPENDED) != null && closeConnectionOnInputStream) {
      req.setAttribute(SUSPENDED,null);
      action=cancelled(req,res);
    }
 else {
      event.close();
    }
  }
 else   if (event.getType() == HttpEvent.EventType.TIMEOUT) {
    action=timedout(req,res);
    event.close();
  }
  return action;
}
