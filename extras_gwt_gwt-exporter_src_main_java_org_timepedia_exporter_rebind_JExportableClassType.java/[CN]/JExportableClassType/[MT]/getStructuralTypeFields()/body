{
  if (!isStructuralType()) {
    return new JStructuralTypeField[0];
  }
 else {
    ArrayList<JStructuralTypeField> fields=new ArrayList<JStructuralTypeField>();
    for (    JMethod method : type.getMethods()) {
      if (method.getName().startsWith("set") && Character.isUpperCase(method.getName().charAt(3)) && method.getParameters().length == 1 || method.getAnnotation(SType.class) != null) {
        fields.add(new JStructuralTypeField(this,method));
      }
    }
    return fields.toArray(new JStructuralTypeField[0]);
  }
}
