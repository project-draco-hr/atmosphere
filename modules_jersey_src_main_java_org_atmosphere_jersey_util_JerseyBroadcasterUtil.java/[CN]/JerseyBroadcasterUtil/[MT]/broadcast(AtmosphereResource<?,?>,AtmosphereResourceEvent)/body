{
  HttpServletRequest request=(HttpServletRequest)r.getRequest();
  boolean lostCandidate=false;
  try {
    ContainerResponse cr=(ContainerResponse)request.getAttribute(FrameworkConfig.CONTAINER_RESPONSE);
    boolean isCancelled=r.getAtmosphereResourceEvent().isCancelled();
    if (cr == null || isCancelled) {
      logger.error("Retrieving HttpServletRequest {} with ContainerResponse {}",request,cr);
      if (!isCancelled) {
        logger.error("Unexpected state. ContainerResponse cannot be null or already committed. The connection hasn't been suspended yet");
      }
 else {
        logger.error("ContainerResponse already resumed or cancelled. Ignoring");
      }
      lostCandidate=true;
      r.getBroadcaster().removeAtmosphereResource(r);
      return;
    }
    String m=cr.getHttpHeaders().getFirst(HttpHeaders.CONTENT_TYPE).toString();
    if (e.getMessage() instanceof Response) {
      cr.setResponse((Response)e.getMessage());
      cr.getHttpHeaders().add(HttpHeaders.CONTENT_TYPE,m);
      cr.write();
      if (!cr.isCommitted()) {
        cr.getOutputStream().flush();
      }
    }
 else     if (e.getMessage() instanceof List) {
      for (      Object msg : (List<Object>)e.getMessage()) {
        cr.setResponse(Response.ok(msg).build());
        cr.getHttpHeaders().add(HttpHeaders.CONTENT_TYPE,m);
        cr.write();
        if (!cr.isCommitted()) {
          cr.getOutputStream().flush();
        }
      }
    }
 else {
      if (e.getMessage() == null) {
        logger.warn("Broadcasted message is null");
      }
      cr.setResponse(Response.ok(e.getMessage()).build());
      cr.getHttpHeaders().add(HttpHeaders.CONTENT_TYPE,m);
      cr.write();
      if (!cr.isCommitted()) {
        cr.getOutputStream().flush();
      }
    }
  }
 catch (  Throwable t) {
    lostCandidate=true;
    onException(t,r);
  }
 finally {
    Boolean resumeOnBroadcast=(Boolean)request.getAttribute(ApplicationConfig.RESUME_ON_BROADCAST);
    if (!lostCandidate && resumeOnBroadcast != null && resumeOnBroadcast) {
      String uuid=(String)request.getAttribute(AtmosphereFilter.RESUME_UUID);
      if (uuid != null) {
        if (request.getAttribute(AtmosphereFilter.RESUME_CANDIDATES) != null) {
          ((ConcurrentHashMap<String,AtmosphereResource<?,?>>)request.getAttribute(AtmosphereFilter.RESUME_CANDIDATES)).remove(uuid);
        }
      }
      r.resume();
    }
    if (lostCandidate && r != null && r.getBroadcaster() != null && r.getBroadcaster().getBroadcasterConfig().getBroadcasterCache() != null) {
      String s=(String)request.getAttribute(ApplicationConfig.BROADCASTER_CACHE_STRATEGY);
      if (s == null || !s.equalsIgnoreCase("beforeFilter")) {
        r.getBroadcaster().getBroadcasterConfig().getBroadcasterCache().addToCache(r,e.getMessage());
      }
    }
  }
}
