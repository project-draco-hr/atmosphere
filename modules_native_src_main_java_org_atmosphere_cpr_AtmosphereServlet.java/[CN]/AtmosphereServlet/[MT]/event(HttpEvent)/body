{
  HttpServletRequest req=httpEvent.getHttpServletRequest();
  HttpServletResponse res=httpEvent.getHttpServletResponse();
  req.setAttribute(JBossWebCometSupport.HTTP_EVENT,httpEvent);
  if (!initializer.framework().isCometSupportSpecified && !initializer.framework().isCometSupportConfigured.getAndSet(true)) {
synchronized (initializer.framework().asyncSupport) {
      if (!initializer.framework().asyncSupport.getClass().equals(JBossWebCometSupport.class) && !initializer.framework().asyncSupport.getClass().equals(JBossAsyncSupportWithWebSocket.class)) {
        AsyncSupport current=initializer.framework().asyncSupport;
        logger.warn("JBossWebCometSupport is enabled, switching to it");
        initializer.framework().asyncSupport=new JBossWebCometSupport(initializer.framework().config);
        if (current instanceof AsynchronousProcessor) {
          ((AsynchronousProcessor)current).shutdown();
        }
        initializer.framework().asyncSupport.init(initializer.framework().config.getServletConfig());
      }
    }
  }
  boolean isWebSocket=req.getHeader("Upgrade") == null ? false : true;
  if (isWebSocket && initializer.framework().asyncSupport.getClass().equals(JBossAsyncSupportWithWebSocket.class)) {
    logger.trace("Dispatching websocket event: " + httpEvent);
    ((JBossAsyncSupportWithWebSocket)initializer.framework().asyncSupport).dispatch(httpEvent);
  }
 else {
    logger.trace("Dispatching comet event: " + httpEvent);
    initializer.framework().doCometSupport(AtmosphereRequest.wrap(req),AtmosphereResponse.wrap(res));
  }
}
