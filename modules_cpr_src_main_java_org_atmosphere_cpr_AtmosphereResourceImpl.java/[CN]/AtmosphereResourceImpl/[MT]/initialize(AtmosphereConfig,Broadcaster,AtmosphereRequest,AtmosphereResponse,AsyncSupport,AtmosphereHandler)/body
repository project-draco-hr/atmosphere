{
  this.req=req;
  this.response=response;
  this.config=config;
  this.asyncSupport=asyncSupport;
  this.atmosphereHandler=atmosphereHandler;
  this.event=new AtmosphereResourceEventImpl(this);
  this.broadcaster=broadcaster;
  uniqueBroadcaster(broadcaster);
  String s=(String)req.getAttribute(SUSPENDED_ATMOSPHERE_RESOURCE_UUID);
  if (s == null) {
    s=response.getHeader(HeaderConfig.X_ATMOSPHERE_TRACKING_ID);
    if (s == null && req != null) {
      String tmp=req.getHeader(HeaderConfig.X_ATMOSPHERE_TRACKING_ID);
      s=tmp != null && !tmp.equalsIgnoreCase("0") ? tmp : null;
    }
  }
  uuid=s == null ? config.uuidProvider().generateUuid() : s;
  if (config.isSupportSession()) {
    try {
      session=req.getSession(config.getInitParameter(PROPERTY_SESSION_CREATE,true));
    }
 catch (    NullPointerException ex) {
      logger.trace("http://java.net/jira/browse/GLASSFISH-18856",ex);
    }
  }
  transport=configureTransport();
  closeOnCancel=config.getInitParameter(ApplicationConfig.CLOSE_STREAM_ON_CANCEL,false);
  return this;
}
