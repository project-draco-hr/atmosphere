{
  if (req.getSession(false) != null && req.getSession().getMaxInactiveInterval() != -1 && req.getSession().getMaxInactiveInterval() * 1000 < timeout) {
    throw new IllegalStateException("Cannot suspend a " + "response longer than the session timeout. Increase the value of session-timeout in web.xml");
  }
  if (req.getAttribute(DefaultBroadcaster.CACHED) != null) {
    req.removeAttribute(DefaultBroadcaster.CACHED);
    return;
  }
  if (!event.isResumedOnTimeout()) {
    if (req.getHeaders("Connection") != null && req.getHeaders("Connection").hasMoreElements()) {
      String[] e=req.getHeaders("Connection").nextElement().split(",");
      for (      String upgrade : e) {
        if (upgrade.trim().equalsIgnoreCase(WEBSOCKET_UPGRADE)) {
          if (writeHeaders && !cometSupport.supportWebSocket()) {
            response.addHeader(X_ATMOSPHERE_ERROR,"Websocket protocol not supported");
          }
 else {
            flushComment=false;
          }
        }
      }
    }
    if (writeHeaders && injectCacheHeaders) {
      response.setHeader(EXPIRES,"-1");
      response.setHeader(CACHE_CONTROL,"no-store, no-cache, must-revalidate");
      response.setHeader(PRAGMA,"no-cache");
    }
    if (writeHeaders && enableAccessControl) {
      response.setHeader(ACCESS_CONTROL_ALLOW_ORIGIN,"*");
      response.setHeader(ACCESS_CONTROL_ALLOW_CREDENTIALS,"true");
    }
    if (flushComment) {
      write();
    }
    req.setAttribute(PRE_SUSPEND,"true");
    action.type=AtmosphereServlet.Action.TYPE.SUSPEND;
    action.timeout=timeout;
    if (broadcaster.getScope() == Broadcaster.SCOPE.REQUEST) {
      String id=broadcaster.getID();
      Class<? extends Broadcaster> clazz=broadcaster.getClass();
      broadcaster=BroadcasterFactory.getDefault().lookup(clazz,id,false);
      if (broadcaster == null || broadcaster.getAtmosphereResources().size() > 0) {
        broadcaster=BroadcasterFactory.getDefault().lookup(clazz,id + "/" + UUID.randomUUID(),true);
      }
    }
    broadcaster.addAtmosphereResource(this);
    req.removeAttribute(PRE_SUSPEND);
    notifyListeners();
  }
}
