{
  if (req.getSession(false) != null && req.getSession().getMaxInactiveInterval() != -1 && req.getSession().getMaxInactiveInterval() * 1000 < timeout) {
    throw new IllegalStateException("Cannot suspend a " + "response longer than the session timeout. Increase the value of session-timeout in web.xml");
  }
  if (!event.isResumedOnTimeout()) {
    String upgrade=req.getHeader("Connection");
    if (upgrade != null && upgrade.equalsIgnoreCase("Upgrade")) {
      if (!cometSupport.supportWebSocket()) {
        response.addHeader("X-Atmosphere-error","Websocket protocol not supported");
      }
 else {
        flushComment=false;
      }
    }
    if (injectCacheHeaders) {
      response.setHeader("Expires","-1");
      response.setHeader("Cache-Control","no-store, no-cache, must-revalidate");
      response.setHeader("Pragma","no-cache");
    }
    if (flushComment) {
      write();
    }
    req.setAttribute(PRE_SUSPEND,"true");
    action.type=AtmosphereServlet.Action.TYPE.SUSPEND;
    action.timeout=timeout;
    if (broadcaster.getScope() == Broadcaster.SCOPE.REQUEST) {
      String id=broadcaster.getID();
      Class<? extends Broadcaster> clazz=broadcaster.getClass();
      broadcaster=BroadcasterFactory.getDefault().lookup(clazz,id,false);
      if (broadcaster == null || broadcaster.getAtmosphereResources().size() > 0) {
        broadcaster=BroadcasterFactory.getDefault().lookup(clazz,id + "/" + UUID.randomUUID(),true);
      }
    }
    broadcaster.addAtmosphereResource(this);
    req.removeAttribute(PRE_SUSPEND);
    notifyListeners();
  }
}
