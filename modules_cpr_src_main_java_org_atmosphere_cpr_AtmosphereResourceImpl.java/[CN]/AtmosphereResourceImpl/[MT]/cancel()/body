{
  try {
    if (!isCancelled.getAndSet(true)) {
      suspended.set(false);
      logger.info("Cancelling {}",uuid);
      if (config.getBroadcasterFactory() != null) {
        config.getBroadcasterFactory().removeAllAtmosphereResource(this);
        if (transport.equals(TRANSPORT.WEBSOCKET)) {
          String parentUUID=(String)req.getAttribute(SUSPENDED_ATMOSPHERE_RESOURCE_UUID);
          AtmosphereResource p=config.resourcesFactory().find(parentUUID);
          if (p != null) {
            config.getBroadcasterFactory().removeAllAtmosphereResource(p);
          }
        }
      }
      asyncSupport.complete(this);
      try {
        Meteor m=(Meteor)req.getAttribute(AtmosphereResourceImpl.METEOR);
        if (m != null) {
          m.destroy();
        }
      }
 catch (      Exception ex) {
        logger.trace("Meteor exception {}",ex);
      }
      SessionTimeoutSupport.restoreTimeout(req);
      action.type(Action.TYPE.CANCELLED);
      if (asyncSupport != null)       asyncSupport.action(this);
      if (AtmosphereResponse.class.isAssignableFrom(response.getClass())) {
        AtmosphereResponse.class.cast(response).close();
        AtmosphereResponse.class.cast(response).destroy();
      }
      if (AtmosphereRequest.class.isAssignableFrom(req.getClass())) {
        AtmosphereRequest.class.cast(req).destroy();
      }
      req.removeAttribute(FrameworkConfig.ATMOSPHERE_RESOURCE);
      event.destroy();
    }
  }
  finally {
    unregister();
  }
}
