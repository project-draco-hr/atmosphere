{
  if (listeners.isEmpty() && config.framework().atmosphereResourceListeners().isEmpty()) {
    logger.trace("No listener with {}",uuid);
    return this;
  }
  logger.trace("Invoking listener {} for {}",listeners,uuid);
  Action oldAction=action;
  try {
    if (HeartbeatAtmosphereResourceEvent.class.isAssignableFrom(event.getClass())) {
      onHeartbeat(event);
    }
 else     if (event.isClosedByApplication()) {
      onClose(event);
    }
 else     if (event.isCancelled() || event.isClosedByClient()) {
      if (!disconnected.getAndSet(true)) {
        onDisconnect(event);
      }
 else {
        logger.trace("Skipping notification, already disconnected {}",event.getResource().uuid());
      }
    }
 else     if (event.isResuming() || event.isResumedOnTimeout()) {
      onResume(event);
    }
 else     if (!isSuspendEvent.getAndSet(true) && event.isSuspended()) {
      onSuspend(event);
    }
 else     if (event.throwable() != null) {
      onThrowable(event);
    }
 else {
      onBroadcast(event);
    }
    if (oldAction.type() != action.type()) {
      action().type(Action.TYPE.CREATED);
    }
  }
 catch (  Throwable t) {
    AtmosphereResourceEventImpl.class.cast(event).setThrowable(t);
    if (event.isSuspended()) {
      logger.warn("Exception during suspend() operation {}",t.toString());
      logger.debug("",t);
      broadcaster.removeAtmosphereResource(this);
      if (config.getBroadcasterFactory() != null) {
        config.getBroadcasterFactory().removeAllAtmosphereResource(this);
      }
    }
 else {
      logger.debug("Listener error {}",t);
    }
    try {
      onThrowable(event);
    }
 catch (    Throwable t2) {
      logger.warn("Listener error {}",t2);
    }
  }
  return this;
}
