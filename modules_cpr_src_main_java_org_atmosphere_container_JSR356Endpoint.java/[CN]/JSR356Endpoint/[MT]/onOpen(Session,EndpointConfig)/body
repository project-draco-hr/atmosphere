{
  webSocket=new JSR356WebSocket(session,framework.getAtmosphereConfig());
  String matchAll="";
  Map<String,String> headers=new HashMap<String,String>();
  headers.put("Connection","Upgrade");
  headers.put("Upgrade","websocket");
  try {
    request=new AtmosphereRequest.Builder().requestURI(session.getRequestURI().toString()).headers(headers).contextPath(framework.getServletContext().getContextPath()).pathInfo(matchAll).queryString(session.getQueryString()).build();
    webSocketProcessor.open(webSocket,request,AtmosphereResponse.newInstance(framework.getAtmosphereConfig(),request,webSocket));
  }
 catch (  Throwable e) {
    logger.trace("",e);
  }
  session.addMessageHandler(new MessageHandler.Whole<String>(){
    @Override public void onMessage(    String s){
      webSocketProcessor.invokeWebSocketProtocol(webSocket,s);
    }
  }
);
  session.addMessageHandler(new MessageHandler.Whole<ByteBuffer>(){
    @Override public void onMessage(    ByteBuffer bb){
      byte[] b=new byte[bb.limit()];
      bb.get(b);
      webSocketProcessor.invokeWebSocketProtocol(webSocket,b,0,b.length);
    }
  }
);
}
