{
  if (!r.transport().equals(AtmosphereResource.TRANSPORT.POLLING) && !r.transport().equals(AtmosphereResource.TRANSPORT.AJAX)) {
    BroadcasterTracker tracker=track(r).tick();
    List<Object> cachedMessages=new LinkedList<Object>();
    for (    String broadcasterID : tracker.ids()) {
      Broadcaster b=factory.lookup(broadcasterID,false);
      BroadcasterCache cache;
      if (b != null && !b.getID().equalsIgnoreCase(r.getBroadcaster().getID())) {
        cache=b.getBroadcasterConfig().getBroadcasterCache();
        List<Object> t=cache.retrieveFromCache(b.getID(),r);
        if (t.size() == 0) {
          logger.trace("Associate AtmosphereResource {} with Broadcaster {}",r.uuid(),broadcasterID);
          b.addAtmosphereResource(r);
        }
 else {
          logger.trace("Found Cached Messages For AtmosphereResource {} with Broadcaster {}",r.uuid(),broadcasterID);
          cachedMessages.addAll(t);
        }
      }
 else {
        logger.trace("Broadcaster {} is no longer available",broadcasterID);
      }
    }
    if (cachedMessages.size() > 0) {
      try {
        r.getAtmosphereHandler().onStateChange(new AtmosphereResourceEventImpl(AtmosphereResourceImpl.class.cast(r),false,false,null).setMessage(cachedMessages));
      }
 catch (      IOException e) {
        logger.warn("Unable to recover from state recovery",e);
      }
      return Action.CANCELLED;
    }
  }
  return Action.CONTINUE;
}
