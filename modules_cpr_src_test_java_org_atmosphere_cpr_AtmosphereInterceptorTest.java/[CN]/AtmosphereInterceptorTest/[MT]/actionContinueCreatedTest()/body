{
  framework.addAtmosphereHandler("/*",handler);
  framework.interceptor(new AtmosphereInterceptor(){
    @Override public void configure(    AtmosphereConfig config){
    }
    @Override public void destroy(){
    }
    @Override public Action inspect(    AtmosphereResource r){
      AtmosphereResourceImpl.class.cast(r).action().type(Action.TYPE.CONTINUE);
      return Action.CONTINUE;
    }
    @Override public void postInspect(    AtmosphereResource r){
    }
  }
);
  assertEquals(Action.CONTINUE,processor.service(mock(AtmosphereRequestImpl.class),AtmosphereResponseImpl.newInstance()));
  framework.interceptor(new AtmosphereInterceptor(){
    @Override public void configure(    AtmosphereConfig config){
    }
    @Override public void destroy(){
    }
    @Override public Action inspect(    AtmosphereResource r){
      AtmosphereResourceImpl.class.cast(r).action().type(Action.TYPE.CREATED);
      return Action.CONTINUE;
    }
    @Override public void postInspect(    AtmosphereResource r){
    }
  }
);
  assertEquals(Action.CREATED,processor.service(mock(AtmosphereRequestImpl.class),AtmosphereResponseImpl.newInstance()));
}
