{
  System.err.println("\n\nTEST broadcastJSONPollingTest\n\n");
  final AsyncHttpClient client=getAsyncHttpClient(new AsyncHttpClientConfig.Builder().setFollowRedirects(true).build());
  final String sessionid1=getSessionID(client,GET_SESSION_URL);
  final String username="test_" + System.currentTimeMillis();
  login("clientJSONPolling1",client,GET_SESSION_URL + "jsonp-polling/" + sessionid1,username,true);
  final AsyncHttpClient client2=getAsyncHttpClient(new AsyncHttpClientConfig.Builder().setFollowRedirects(true).build());
  final String sessionid2=getSessionID(client,GET_SESSION_URL);
  final String username2="test_" + System.currentTimeMillis();
  loginJSONP("clientJSONPolling2",client2,GET_SESSION_URL + "jsonp-polling/" + sessionid2,username2,true);
  suspend("clientJSONPolling1",client,GET_SESSION_URL + "jsonp-polling/" + sessionid1,new ResponseListener(){
    @Override public void notify(    String message){
      log.info("clientJSONPolling1 message received = " + message);
      Assert.assertNotNull(message);
      Assert.assertEquals(message,"io.j[0](\"1::\");");
    }
  }
);
  suspend("clientJSONPolling2",client2,GET_SESSION_URL + "jsonp-polling/" + sessionid2,new ResponseListener(){
    @Override public void notify(    String message){
      log.info("clientJSONPolling2 message received = " + message);
      Assert.assertNotNull(message);
      Assert.assertEquals(message,"io.j[0](\"5:::{\"name\":\"user message\",\"args\":[\"message1 from " + username + "\"]}\");");
    }
  }
);
  sendMessage("clientJSONPolling1",client,GET_SESSION_URL + "jsonp-polling/" + sessionid1,"5:::{\\\"name\\\":\\\"user message\\\",\\\"args\\\":[\\\"message1 from " + username + "\\\"]}",new ResponseListener(){
    @Override public void notify(    String message){
      log.info("clientJSONPolling1 message received = " + message);
      Assert.assertNotNull(message);
      Assert.assertEquals(message,"io.j[0](\"1::\");");
    }
  }
);
  client.close();
  client2.close();
}
