{
  Action a=Action.CONTINUE;
  for (  AtmosphereInterceptor arc : c) {
    if (!AtmosphereResourceImpl.class.cast(r).isInScope()) {
      logger.warn("Request closed during processing {} and transport {}",r.uuid(),r.transport());
      return Action.CANCELLED;
    }
    try {
      a=arc.inspect(r);
    }
 catch (    Exception ex) {
      logger.error("Interceptor {} crashed. Processing will continue with other interceptor.",arc,ex);
      continue;
    }
    if (a == null) {
      logger.trace("Action was null for {}",arc);
      a=Action.CANCELLED;
    }
    boolean skip=a.type() == SKIP_ATMOSPHEREHANDLER;
    if (skip) {
      logger.trace("AtmosphereInterceptor {} asked to skip the AtmosphereHandler for {}",arc,r.uuid());
      r.getRequest().setAttribute(SKIP_ATMOSPHEREHANDLER.name(),Boolean.TRUE);
    }
    if (a.type() != Action.TYPE.CONTINUE) {
      logger.trace("Interceptor {} interrupted the dispatch for {} with " + a,arc,r.uuid());
      return a;
    }
    if (logger.isTraceEnabled()) {
      logger.trace("\t {}: {} for {}",new String[]{String.valueOf(tracing++),arc.getClass().getName(),r.uuid()});
    }
  }
  return a;
}
