{
synchronized (req) {
    AtmosphereResourceImpl r=null;
    try {
      if (trackActiveRequest) {
        long l=(Long)req.getAttribute(MAX_INACTIVE);
        if (l == -1) {
          return timedoutAction;
        }
        req.setAttribute(MAX_INACTIVE,(long)-1);
      }
      logger.debug("Cancelling the connection for request {}",req);
      r=(AtmosphereResourceImpl)req.getAttribute(FrameworkConfig.ATMOSPHERE_RESOURCE);
      if (r != null) {
        r.getAtmosphereResourceEvent().setCancelled(true);
        invokeAtmosphereHandler(r);
        try {
          r.getResponse().sendError(503);
          r.getResponse().getOutputStream().close();
        }
 catch (        Throwable t) {
          try {
            r.getResponse().getWriter().close();
          }
 catch (          Throwable t2) {
          }
        }
      }
    }
 catch (    Throwable ex) {
      logger.debug("failed to cancel resource: " + r,ex);
    }
 finally {
      try {
        if (r != null) {
          r.notifyListeners();
          r.setIsInScope(false);
          r.cancel();
        }
      }
 catch (      Throwable t) {
        logger.trace("cancel",t);
      }
 finally {
        if (r != null) {
          destroyResource(r);
        }
      }
    }
  }
  return cancelledAction;
}
