{
  AtmosphereRequest req=r.getRequest(false);
  try {
    if (r.isInScope()) {
      String disableOnEvent=r.getAtmosphereConfig().getInitParameter(ApplicationConfig.DISABLE_ONSTATE_EVENT);
      r.getAtmosphereResourceEvent().setMessage(r.writeOnTimeout());
      try {
        if (disableOnEvent == null || !disableOnEvent.equals(String.valueOf(true))) {
          AtmosphereHandler atmosphereHandler=r.getAtmosphereHandler();
          if (atmosphereHandler != null) {
synchronized (r) {
              atmosphereHandler.onStateChange(r.getAtmosphereResourceEvent());
            }
          }
        }
      }
 catch (      IOException ex) {
        try {
          r.onThrowable(ex);
        }
 catch (        Throwable t) {
          logger.warn("failed calling onThrowable()",ex);
        }
      }
    }
 else {
      logger.trace("AtmosphereResource out of scope {}",r.uuid());
      return;
    }
  }
  finally {
    Meteor m=(Meteor)req.getAttribute(AtmosphereResourceImpl.METEOR);
    if (m != null) {
      m.destroy();
    }
  }
}
