{
  if (r != null && !r.isCancelled() && !AtmosphereResourceImpl.class.cast(r).getAndSetInClosingPhase()) {
    logger.trace("Finishing lifecycle for AtmosphereResource {}",r.uuid());
    final AtmosphereResourceImpl impl=AtmosphereResourceImpl.class.cast(r);
    try {
      if (impl.isCancelled()) {
        logger.debug("{} is already cancelled",impl.uuid());
        return false;
      }
      AtmosphereResourceEventImpl e=impl.getAtmosphereResourceEvent();
      if (config.framework().isDestroyed()) {
        cancelled=true;
      }
      if (!e.isClosedByClient()) {
        if (cancelled) {
          e.setCancelled(cancelled);
        }
 else {
          e.setIsResumedOnTimeout(true);
          Broadcaster b=r.getBroadcaster();
          if (b instanceof DefaultBroadcaster) {
            ((DefaultBroadcaster)b).broadcastOnResume(r);
          }
        }
      }
      invokeAtmosphereHandler(impl);
    }
 catch (    Throwable ex) {
      logger.error("Failed to cancel resource: {}",impl.uuid(),ex);
    }
 finally {
      try {
        impl.notifyListeners();
        impl.setIsInScope(false);
        impl.cancel();
      }
 catch (      Throwable t) {
        logger.debug("completeLifecycle",t);
      }
 finally {
        impl._destroy();
      }
    }
    return true;
  }
 else {
    logger.trace("AtmosphereResource {} was already cancelled or gc",r != null ? r.uuid() : "null");
    return false;
  }
}
