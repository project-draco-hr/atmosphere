{
  if (r != null && !r.isCancelled()) {
    logger.trace("Finishing lifecycle for AtmosphereResource {}",r.uuid());
    final AtmosphereResourceImpl impl=AtmosphereResourceImpl.class.cast(r);
synchronized (impl) {
      try {
        if (impl.isCancelled()) {
          logger.trace("{} is already cancelled",impl.uuid());
          return false;
        }
        AtmosphereResourceEventImpl e=impl.getAtmosphereResourceEvent();
        if (!e.isClosedByClient()) {
          if (cancelled) {
            e.setCancelled(true);
          }
 else {
            e.setIsResumedOnTimeout(true);
            Broadcaster b=r.getBroadcaster();
            if (b instanceof DefaultBroadcaster) {
              ((DefaultBroadcaster)b).broadcastOnResume(r);
            }
          }
        }
        invokeAtmosphereHandler(impl);
      }
 catch (      Throwable ex) {
        logger.trace("Failed to cancel resource: {}",impl.uuid(),ex);
      }
 finally {
        try {
          impl.notifyListeners();
          try {
            impl.getResponse(false).getOutputStream().close();
          }
 catch (          Throwable t) {
            try {
              impl.getResponse(false).getWriter().close();
            }
 catch (            Throwable t2) {
            }
          }
          impl.setIsInScope(false);
          impl.cancel();
        }
 catch (        Throwable t) {
          logger.trace("completeLifecycle",t);
        }
 finally {
          impl._destroy();
        }
      }
    }
    return true;
  }
 else {
    logger.trace("AtmosphereResource {} was already cancelled or gc",r != null ? r.uuid() : "null");
    return false;
  }
}
