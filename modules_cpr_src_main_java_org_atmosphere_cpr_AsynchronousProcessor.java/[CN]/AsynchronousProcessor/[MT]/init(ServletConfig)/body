{
  String maxInactive=sc.getInitParameter(MAX_INACTIVE) != null ? sc.getInitParameter(MAX_INACTIVE) : config.getInitParameter(MAX_INACTIVE);
  if (maxInactive != null) {
    trackActiveRequest=true;
    final long maxInactiveTime=Long.parseLong(maxInactive);
    if (maxInactiveTime <= 0)     return;
    closedDetector.scheduleAtFixedRate(new Runnable(){
      public void run(){
        for (        AtmosphereRequest req : aliveRequests.keySet()) {
          long l=(Long)req.getAttribute(MAX_INACTIVE);
          if (l > 0 && System.currentTimeMillis() - l > maxInactiveTime) {
            try {
              logger.debug("Close detector disconnecting {}. Current size {}",req,aliveRequests.size());
              AtmosphereResourceImpl r=(AtmosphereResourceImpl)aliveRequests.remove(req);
              cancelled(req,r.getResponse(false));
            }
 catch (            Throwable e) {
              logger.warn("closedDetector",e);
            }
 finally {
              try {
                req.setAttribute(MAX_INACTIVE,(long)-1);
              }
 catch (              Throwable t) {
                logger.trace("closedDetector",t);
              }
            }
          }
        }
      }
    }
,0,1,TimeUnit.SECONDS);
  }
}
