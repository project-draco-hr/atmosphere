{
  final AtomicReference<AtmosphereResponse> e=new AtomicReference<AtmosphereResponse>();
  framework.addAtmosphereHandler("/a",new AbstractReflectorAtmosphereHandler(){
    @Override public void onRequest(    AtmosphereResource resource) throws IOException {
      resource.addEventListener(new AtmosphereResourceEventListenerAdapter(){
        @Override public void onPreSuspend(        AtmosphereResourceEvent event){
          AtmosphereResponse response=event.getResource().getResponse();
          response.setCharacterEncoding("utf-8");
          e.set(response);
        }
      }
).suspend(10);
    }
    @Override public void destroy(){
    }
  }
);
  AtmosphereRequest request=new AtmosphereRequest.Builder().pathInfo("/a").build();
  framework.doCometSupport(request,AtmosphereResponse.newInstance().delegateToNativeResponse(false));
  assertEquals(e.get().getCharacterEncoding(),"utf-8");
}
