{
  if (!isValidType(c))   return null;
  return new Injectable<AtmosphereResource>(){
    @Override public AtmosphereResource getValue(){
      return (AtmosphereResourceImpl)Proxy.newProxyInstance(this.getClass().getClassLoader(),new Class[]{AtmosphereResourceImpl.class},new InvocationHandler(){
        @Override public Object invoke(        Object proxy,        Method method,        Object[] args) throws Throwable {
          return method.invoke(getAtmosphereResource(AtmosphereResource.class,false),args);
        }
      }
);
    }
  }
;
}
