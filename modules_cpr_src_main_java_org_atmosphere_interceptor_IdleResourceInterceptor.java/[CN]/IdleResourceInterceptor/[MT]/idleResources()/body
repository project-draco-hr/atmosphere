{
  for (  AtmosphereResource r : config.resourcesFactory().findAll()) {
    AtmosphereRequest req=AtmosphereResourceImpl.class.cast(r).getRequest(false);
    try {
      if (req.getAttribute(MAX_INACTIVE) == null)       return;
      long l=(Long)req.getAttribute(MAX_INACTIVE);
      if (l > 0 && System.currentTimeMillis() - l > maxInactiveTime) {
        try {
          req.setAttribute(MAX_INACTIVE,(long)-1);
          logger.debug("IdleResourceInterceptor disconnecting {}",r);
          Future<?> f=(Future<?>)req.getAttribute(HeartbeatInterceptor.HEARTBEAT_FUTURE);
          if (f != null)           f.cancel(false);
          req.removeAttribute(HeartbeatInterceptor.HEARTBEAT_FUTURE);
          Object o=req.getAttribute(ASYNCHRONOUS_HOOK);
          WebSocket webSocket=AtmosphereResourceImpl.class.cast(r).webSocket();
          if (webSocket != null) {
            webSocket.close();
          }
 else {
            req.setAttribute(ASYNCHRONOUS_HOOK,null);
            AsynchronousProcessor.AsynchronousProcessorHook h;
            if (o != null && AsynchronousProcessor.AsynchronousProcessorHook.class.isAssignableFrom(o.getClass())) {
              h=(AsynchronousProcessor.AsynchronousProcessorHook)o;
              h.closed();
            }
          }
        }
  finally {
          config.getBroadcasterFactory().removeAllAtmosphereResource(r);
          config.resourcesFactory().unRegisterUuidForFindCandidate(r);
        }
      }
    }
 catch (    Throwable e) {
      logger.warn("IdleResourceInterceptor",e);
    }
  }
}
