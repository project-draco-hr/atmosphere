{
  if (logger.isTraceEnabled()) {
    logger.trace("{} monitoring {} AtmosphereResources",getClass().getSimpleName(),config.resourcesFactory().findAll().size());
  }
  for (  AtmosphereResource r : config.resourcesFactory().findAll()) {
    if (Utils.pollableTransport(r.transport())) {
      continue;
    }
    AtmosphereRequest req=AtmosphereResourceImpl.class.cast(r).getRequest(false);
    try {
      if (req.getAttribute(MAX_INACTIVE) == null) {
        logger.error("Invalid state {}",r);
        r.removeFromAllBroadcasters();
        config.resourcesFactory().unRegisterUuidForFindCandidate(r);
        continue;
      }
      long l=(Long)req.getAttribute(MAX_INACTIVE);
      if (logger.isTraceEnabled() && l > 0) {
        logger.trace("Expiring {} in {}",r.uuid(),System.currentTimeMillis() - l);
      }
      if (l > 0 && System.currentTimeMillis() - l > maxInactiveTime) {
        try {
          req.setAttribute(MAX_INACTIVE,(long)-1);
          logger.debug("IdleResourceInterceptor disconnecting {}",r);
          Future<?> f=(Future<?>)req.getAttribute(HeartbeatInterceptor.HEARTBEAT_FUTURE);
          if (f != null)           f.cancel(false);
          req.removeAttribute(HeartbeatInterceptor.HEARTBEAT_FUTURE);
          WebSocket webSocket=AtmosphereResourceImpl.class.cast(r).webSocket();
          if (webSocket != null) {
            webSocket.close();
          }
 else {
            AsynchronousProcessor.class.cast(config.framework().getAsyncSupport()).endRequest(AtmosphereResourceImpl.class.cast(r),true);
          }
        }
  finally {
          r.removeFromAllBroadcasters();
          config.resourcesFactory().unRegisterUuidForFindCandidate(r);
        }
      }
    }
 catch (    Throwable e) {
      logger.warn("IdleResourceInterceptor",e);
    }
  }
}
