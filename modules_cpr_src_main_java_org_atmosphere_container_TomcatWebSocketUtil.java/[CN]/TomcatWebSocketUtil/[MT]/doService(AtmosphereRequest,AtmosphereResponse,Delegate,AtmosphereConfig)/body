{
  if (req.getAttribute(WebSocket.WEBSOCKET_SUSPEND) == null) {
    String key;
    String subProtocol=null;
    if (!headerContainsToken(req,"Upgrade","websocket")) {
      return delegate.doService(req,res);
    }
    if (!headerContainsToken(req,"Connection","upgrade")) {
      return delegate.doService(req,res);
    }
    if (!headerContainsToken(req,"sec-websocket-version","13")) {
      logger.debug("WebSocket version not supported. Downgrading to Comet");
      res.sendError(501,"Websocket protocol not supported");
      return new Action(Action.TYPE.CANCELLED);
    }
    key=req.getHeader("Sec-WebSocket-Key");
    if (key == null) {
      return delegate.doService(req,res);
    }
    res.setHeader("Upgrade","websocket");
    res.setHeader("Connection","upgrade");
    res.setHeader("Sec-WebSocket-Accept",getWebSocketAccept(key));
    if (subProtocol != null) {
      res.setHeader("Sec-WebSocket-Protocol",subProtocol);
    }
    HttpServletRequest hsr=req.wrappedRequest();
    while (hsr instanceof HttpServletRequestWrapper)     hsr=(HttpServletRequest)((HttpServletRequestWrapper)hsr).getRequest();
    RequestFacade facade=(RequestFacade)hsr;
    boolean isDestroyable=false;
    String s=config.getInitParameter(ApplicationConfig.RECYCLE_ATMOSPHERE_REQUEST_RESPONSE);
    if (s != null && Boolean.valueOf(s)) {
      isDestroyable=true;
    }
    StreamInbound inbound=new TomcatWebSocketHandler(AtmosphereRequest.cloneRequest(req,true,config.isSupportSession(),isDestroyable),config.framework(),config.framework().getWebSocketProtocol());
    facade.doUpgrade(inbound);
    return new Action(Action.TYPE.CREATED);
  }
  Action action=delegate.suspended(req,res);
  if (action.type() == Action.TYPE.RESUME) {
    req.setAttribute(WebSocket.WEBSOCKET_RESUME,true);
  }
  return action;
}
