{
  try {
    if (isBroadcasterSpecified == false) {
      broadcasterClassName=lookupDefaultBroadcasterType(broadcasterClassName);
    }
    if (broadcasterFactoryClassName != null) {
      broadcasterFactory=(BroadcasterFactory)Thread.currentThread().getContextClassLoader().loadClass(broadcasterFactoryClassName).newInstance();
    }
    if (broadcasterFactory == null) {
      Class<? extends Broadcaster> bc=(Class<? extends Broadcaster>)Thread.currentThread().getContextClassLoader().loadClass(broadcasterClassName);
      broadcasterFactory=new DefaultBroadcasterFactory(bc,broadcasterLifeCyclePolicy,config);
    }
    for (    BroadcasterListener b : broadcasterListeners) {
      broadcasterFactory.addBroadcasterListener(b);
    }
    BroadcasterFactory.setBroadcasterFactory(broadcasterFactory,config);
    InjectorProvider.getInjector().inject(broadcasterFactory);
    Iterator<Entry<String,AtmosphereHandlerWrapper>> i=atmosphereHandlers.entrySet().iterator();
    AtmosphereHandlerWrapper w;
    Entry<String,AtmosphereHandlerWrapper> e;
    while (i.hasNext()) {
      e=i.next();
      w=e.getValue();
      BroadcasterConfig broadcasterConfig=new BroadcasterConfig(broadcasterFilters,config,w.mapping);
      if (w.broadcaster == null) {
        w.broadcaster=broadcasterFactory.get(w.mapping);
      }
 else {
        w.broadcaster.setBroadcasterConfig(broadcasterConfig);
        if (broadcasterCacheClassName != null) {
          BroadcasterCache cache=(BroadcasterCache)Thread.currentThread().getContextClassLoader().loadClass(broadcasterCacheClassName).newInstance();
          InjectorProvider.getInjector().inject(cache);
          broadcasterConfig.setBroadcasterCache(cache);
        }
      }
    }
  }
 catch (  Exception ex) {
    logger.error("Unable to configure Broadcaster/Factory/Cache",ex);
  }
}
