{
  if (stream == null) {
    return;
  }
  AtmosphereConfigReader.getInstance().parse(config,stream);
  for (  AtmosphereHandlerConfig atmoHandler : config.getAtmosphereHandler()) {
    try {
      AtmosphereHandler handler;
      if (!ReflectorServletProcessor.class.getName().equals(atmoHandler.getClassName())) {
        handler=(AtmosphereHandler)c.loadClass(atmoHandler.getClassName()).newInstance();
        InjectorProvider.getInjector().inject(handler);
      }
 else {
        handler=new ReflectorServletProcessor();
      }
      logger.info("Installed AtmosphereHandler {} mapped to context-path: {}",handler,atmoHandler.getContextRoot());
      boolean isJersey=false;
      for (      AtmosphereHandlerProperty handlerProperty : atmoHandler.getProperties()) {
        if (handlerProperty.getName() != null && handlerProperty.getName().indexOf("jersey") != -1) {
          isJersey=true;
          initParams.put(DISABLE_ONSTATE_EVENT,"true");
          useStreamForFlushingComments=true;
          broadcasterClassName=lookupDefaultBroadcasterType();
        }
        IntrospectionUtils.setProperty(handler,handlerProperty.getName(),handlerProperty.getValue());
        IntrospectionUtils.addProperty(handler,handlerProperty.getName(),handlerProperty.getValue());
      }
      config.setSupportSession(!isJersey);
      if (!atmoHandler.getSupportSession().equals("")) {
        sessionSupport(Boolean.valueOf(atmoHandler.getSupportSession()));
      }
      String broadcasterClass=atmoHandler.getBroadcaster();
      Broadcaster b;
      if (broadcasterClass != null) {
        broadcasterClassName=broadcasterClass;
        ClassLoader cl=Thread.currentThread().getContextClassLoader();
        Class<? extends Broadcaster> bc=(Class<? extends Broadcaster>)cl.loadClass(broadcasterClassName);
        broadcasterFactory=new DefaultBroadcasterFactory(bc,broadcasterLifeCyclePolicy,config);
        BroadcasterFactory.setBroadcasterFactory(broadcasterFactory,config);
      }
      b=BroadcasterFactory.getDefault().get(atmoHandler.getContextRoot());
      AtmosphereHandlerWrapper wrapper=new AtmosphereHandlerWrapper(handler,b);
      addMapping(atmoHandler.getContextRoot(),wrapper);
      String bc=atmoHandler.getBroadcasterCache();
      if (bc != null) {
        broadcasterCacheClassName=bc;
      }
      if (atmoHandler.getCometSupport() != null) {
        asyncSupport=(AsyncSupport)c.loadClass(atmoHandler.getCometSupport()).getDeclaredConstructor(new Class[]{AtmosphereConfig.class}).newInstance(new Object[]{config});
      }
      if (atmoHandler.getBroadcastFilterClasses() != null) {
        broadcasterFilters.addAll(atmoHandler.getBroadcastFilterClasses());
      }
    }
 catch (    Throwable t) {
      logger.warn("unable to load AtmosphereHandler class: " + atmoHandler.getClassName(),t);
      throw new ServletException(t);
    }
  }
}
