{
  if (isInit)   return this;
  readSystemProperties();
  populateBroadcasterType();
  populateObjectFactoryType();
  try {
    ServletConfig scFacade;
    if (wrap) {
      scFacade=new ServletConfig(){
        AtomicBoolean done=new AtomicBoolean();
        public String getServletName(){
          return sc.getServletName();
        }
        public ServletContext getServletContext(){
          return sc.getServletContext();
        }
        public String getInitParameter(        String name){
          String param=initParams.get(name);
          if (param == null) {
            return sc.getInitParameter(name);
          }
          return param;
        }
        public Enumeration<String> getInitParameterNames(){
          if (!done.getAndSet(true)) {
            Enumeration en=sc.getInitParameterNames();
            if (en != null) {
              while (en.hasMoreElements()) {
                String name=(String)en.nextElement();
                if (!initParams.containsKey(name)) {
                  initParams.put(name,sc.getInitParameter(name));
                }
              }
            }
          }
          return Collections.enumeration(initParams.keySet());
        }
      }
;
    }
 else {
      scFacade=sc;
    }
    this.servletConfig=scFacade;
    preventOOM();
    doInitParams(scFacade);
    doInitParamsForWebSocket(scFacade);
    objectFactory=lookupDefaultObjectFactoryType();
    asyncSupportListener(new AsyncSupportListenerAdapter());
    configureObjectFactory();
    configureAnnotationPackages();
    configureBroadcasterFactory();
    configureScanningPackage(scFacade);
    installAnnotationProcessor(scFacade);
    autoConfigureService(scFacade.getServletContext());
    configureBroadcasterFactory();
    patchContainer();
    configureBroadcaster();
    loadConfiguration(scFacade);
    initWebSocket();
    initEndpointMapper();
    autoDetectContainer();
    configureWebDotXmlAtmosphereHandler(scFacade);
    asyncSupport.init(scFacade);
    initAtmosphereHandler(scFacade);
    configureAtmosphereInterceptor(scFacade);
    analytics();
    if (sc.getServletContext() != null) {
      sc.getServletContext().setAttribute(BroadcasterFactory.class.getName(),broadcasterFactory);
    }
    String s=config.getInitParameter(ApplicationConfig.BROADCASTER_SHARABLE_THREAD_POOLS);
    if (s != null) {
      sharedThreadPools=Boolean.parseBoolean(s);
    }
    info();
  }
 catch (  Throwable t) {
    logger.error("Failed to initialize Atmosphere Framework",t);
    if (t instanceof ServletException) {
      throw (ServletException)t;
    }
    throw new ServletException(t);
  }
  isInit=true;
  return this;
}
