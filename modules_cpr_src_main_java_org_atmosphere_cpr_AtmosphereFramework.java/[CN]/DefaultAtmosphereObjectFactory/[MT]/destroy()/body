{
  if (isDestroyed.getAndSet(true))   return this;
  onPreDestroy();
  closeAtmosphereResource();
  destroyInterceptors();
  config.destroy();
  BroadcasterFactory factory=broadcasterFactory;
  if (factory != null) {
    factory.destroy();
  }
  if (asyncSupport != null && AsynchronousProcessor.class.isAssignableFrom(asyncSupport.getClass())) {
    ((AsynchronousProcessor)asyncSupport).shutdown();
  }
  for (  Entry<String,AtmosphereHandlerWrapper> entry : atmosphereHandlers.entrySet()) {
    AtmosphereHandlerWrapper handlerWrapper=entry.getValue();
    handlerWrapper.atmosphereHandler.destroy();
  }
  if (metaBroadcaster != null)   metaBroadcaster.destroy();
  if (arFactory != null)   arFactory.destroy();
  if (sessionFactory != null)   sessionFactory.destroy();
  WebSocketProcessorFactory.getDefault().destroy();
  ExecutorsFactory.reset(config);
  resetStates();
  onPostDestroy();
  try {
    if (this.shutdownHook != null) {
      Runtime.getRuntime().removeShutdownHook(this.shutdownHook);
      shutdownHook=null;
    }
  }
 catch (  IllegalStateException ex) {
    logger.trace("",ex);
  }
  return this;
}
