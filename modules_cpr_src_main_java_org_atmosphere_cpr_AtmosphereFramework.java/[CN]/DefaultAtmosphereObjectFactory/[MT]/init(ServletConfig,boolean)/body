{
  if (isInit)   return this;
  servletConfig(sc,wrap);
  readSystemProperties();
  populateBroadcasterType();
  populateObjectFactoryType();
  loadMetaService();
  onPreInit();
  try {
    ServletContextFactory.getDefault().init(sc.getServletContext());
    preventOOM();
    doInitParams(servletConfig);
    doInitParamsForWebSocket(servletConfig);
    lookupDefaultObjectFactoryType();
    if (logger.isDebugEnabled()) {
      asyncSupportListener(newClassInstance(AsyncSupportListener.class,AsyncSupportListenerAdapter.class));
    }
    configureObjectFactory();
    configureAnnotationPackages();
    configureBroadcasterFactory();
    configureMetaBroadcaster();
    configureAtmosphereResourceFactory();
    if (isSessionSupportSpecified) {
      sessionFactory();
    }
    configureScanningPackage(servletConfig,ApplicationConfig.ANNOTATION_PACKAGE);
    configureScanningPackage(servletConfig,FrameworkConfig.JERSEY2_SCANNING_PACKAGE);
    configureScanningPackage(servletConfig,FrameworkConfig.JERSEY_SCANNING_PACKAGE);
    defaultPackagesToScan();
    installAnnotationProcessor(servletConfig);
    autoConfigureService(servletConfig.getServletContext());
    configureBroadcasterFactory();
    patchContainer();
    configureBroadcaster();
    loadConfiguration(servletConfig);
    initWebSocket();
    initEndpointMapper();
    initDefaultSerializer();
    autoDetectContainer();
    configureWebDotXmlAtmosphereHandler(servletConfig);
    asyncSupport.init(servletConfig);
    initAtmosphereHandler(servletConfig);
    configureAtmosphereInterceptor(servletConfig);
    analytics();
    if (sc.getServletContext() != null) {
      sc.getServletContext().setAttribute(BroadcasterFactory.class.getName(),broadcasterFactory);
    }
    String s=config.getInitParameter(ApplicationConfig.BROADCASTER_SHARABLE_THREAD_POOLS);
    if (s != null) {
      sharedThreadPools=Boolean.parseBoolean(s);
    }
    this.shutdownHook=new Thread(){
      public void run(){
        AtmosphereFramework.this.shutdownHook=null;
        AtmosphereFramework.this.destroy();
      }
    }
;
    Runtime.getRuntime().addShutdownHook(this.shutdownHook);
    if (logger.isInfoEnabled()) {
      info();
    }
    if (initializationError != null) {
      logger.trace("ContainerInitalizer exception. May not be an issue if Atmosphere started properly ",initializationError);
    }
    universe();
  }
 catch (  Throwable t) {
    logger.error("Failed to initialize Atmosphere Framework",t);
    if (t instanceof ServletException) {
      throw (ServletException)t;
    }
    throw new ServletException(t);
  }
  isInit=true;
  config.initComplete();
  if (WebLogicServlet30WithWebSocket.class.isAssignableFrom(asyncSupport.getClass())) {
    servletConfig.getServletContext().setAttribute(AtmosphereConfig.class.getName(),config);
  }
  onPostInit();
  return this;
}
