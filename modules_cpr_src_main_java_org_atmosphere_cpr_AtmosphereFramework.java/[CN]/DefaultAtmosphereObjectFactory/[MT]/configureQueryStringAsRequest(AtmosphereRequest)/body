{
  Map<String,String> headers=new HashMap<String,String>();
  StringBuilder q=new StringBuilder();
  try {
    String qs=request.getQueryString();
    if (qs != null && !qs.isEmpty()) {
      String[] params=qs.split("&");
      String[] s;
      for (      String p : params) {
        s=p.split("=",2);
        final String header=s[0];
        final String value=s.length > 1 ? s[1] : "";
        if (header.equalsIgnoreCase("Content-Type")) {
          if (request.getContentType() == null || !request.getContentType().equalsIgnoreCase(s.length > 1 ? value : "")) {
            request.contentType(s.length > 1 ? URLDecoder.decode(value,"UTF-8") : "");
          }
        }
        if (!header.isEmpty() && !header.toLowerCase().startsWith("x-atmo") && !header.equalsIgnoreCase("x-cache-date")&& !header.equalsIgnoreCase(HeaderConfig.X_HEARTBEAT_SERVER)&& !header.equalsIgnoreCase("Content-Type")&& !header.equalsIgnoreCase("_")) {
          q.append(header).append("=").append(s.length > 1 ? value : "").append("&");
        }
        headers.put(header,s.length > 1 ? value : "");
      }
    }
  }
 catch (  Exception ex) {
    logger.error("Unable to parse query string",ex);
  }
  String disallowModifyQueryString=config.getInitParameter(ApplicationConfig.DISALLOW_MODIFY_QUERYSTRING);
  if (disallowModifyQueryString == null || disallowModifyQueryString.length() == 0 || "false".equalsIgnoreCase(disallowModifyQueryString)) {
    if (q.length() > 0) {
      q.deleteCharAt(q.length() - 1);
    }
    request.queryString(q.toString());
  }
  logger.trace("Query String translated to headers {}",headers);
  return headers;
}
