{
  String s=sc.getInitParameter(ApplicationConfig.ATMOSPHERE_INTERCEPTORS);
  if (s != null) {
    String[] list=s.split(",");
    for (    String a : list) {
      try {
        AtmosphereInterceptor ai=newClassInstance(AtmosphereInterceptor.class,(Class<AtmosphereInterceptor>)IOUtils.loadClass(getClass(),a.trim()));
        interceptor(ai);
      }
 catch (      Exception e) {
        logger.warn("",e);
      }
    }
  }
  s=sc.getInitParameter(ApplicationConfig.DISABLE_ATMOSPHEREINTERCEPTOR);
  if (s == null || !"true".equalsIgnoreCase(s)) {
    logger.info("Installing Default AtmosphereInterceptors");
    s=sc.getInitParameter(ApplicationConfig.DISABLE_ATMOSPHEREINTERCEPTORS);
    if (s != null) {
      excludedInterceptors.addAll(Arrays.asList(s.trim().replace(" ","").split(",")));
    }
    LinkedList<AtmosphereInterceptor> copy=null;
    if (!interceptors.isEmpty()) {
      copy=new LinkedList<AtmosphereInterceptor>(interceptors);
      interceptors.clear();
    }
    for (    Class<? extends AtmosphereInterceptor> a : defaultInterceptors) {
      if (!excludedInterceptors.contains(a.getName())) {
        interceptors.add(newAInterceptor(a));
      }
 else {
        logger.info("Dropping Interceptor {}",a.getName());
      }
    }
    if (copy != null) {
      for (      AtmosphereInterceptor i : copy) {
        interceptor(i);
      }
    }
    logger.info("Set {} to disable them.",ApplicationConfig.DISABLE_ATMOSPHEREINTERCEPTOR,interceptors);
  }
  initInterceptors();
}
