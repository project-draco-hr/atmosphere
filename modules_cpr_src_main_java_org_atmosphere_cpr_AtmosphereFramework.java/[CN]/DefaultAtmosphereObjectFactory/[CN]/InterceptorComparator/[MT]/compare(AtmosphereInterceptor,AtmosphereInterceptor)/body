{
  InvokationOrder.PRIORITY p1, p2;
  if (i1 instanceof InvokationOrder) {
    p1=((InvokationOrder)i1).priority();
  }
 else {
    p1=InvokationOrder.PRIORITY.AFTER_DEFAULT;
  }
  if (i2 instanceof InvokationOrder) {
    p2=((InvokationOrder)i2).priority();
  }
 else {
    p2=InvokationOrder.PRIORITY.AFTER_DEFAULT;
  }
  int orderResult=0;
switch (p1) {
case AFTER_DEFAULT:
switch (p2) {
case BEFORE_DEFAULT:
case FIRST_BEFORE_DEFAULT:
      orderResult=1;
    break;
}
break;
case BEFORE_DEFAULT:
switch (p2) {
case AFTER_DEFAULT:
orderResult=-1;
break;
case FIRST_BEFORE_DEFAULT:
orderResult=1;
break;
}
break;
case FIRST_BEFORE_DEFAULT:
switch (p2) {
case AFTER_DEFAULT:
case BEFORE_DEFAULT:
orderResult=-1;
break;
}
break;
}
return orderResult;
}
