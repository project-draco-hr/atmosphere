{
  final StringBuilder stringBuilder=new StringBuilder();
  boolean readGetBody=r.getAtmosphereConfig().getInitParameter(ApplicationConfig.READ_GET_BODY,false);
  if (!readGetBody && AtmosphereResourceImpl.class.cast(r).getRequest(false).getMethod().equalsIgnoreCase("GET")) {
    return stringBuilder;
  }
  AtmosphereRequest request=r.getRequest();
  if (request.body().isEmpty()) {
    BufferedReader bufferedReader=null;
    try {
      try {
        InputStream inputStream=request.getInputStream();
        if (inputStream != null) {
          bufferedReader=new BufferedReader(new InputStreamReader(inputStream));
        }
      }
 catch (      IllegalStateException ex) {
        logger.trace("",ex);
        Reader reader=request.getReader();
        if (reader != null) {
          bufferedReader=new BufferedReader(reader);
        }
      }
      if (bufferedReader != null) {
        char[] charBuffer=new char[8192];
        int bytesRead=-1;
        try {
          while ((bytesRead=bufferedReader.read(charBuffer)) > 0) {
            stringBuilder.append(charBuffer,0,bytesRead);
          }
        }
 catch (        NullPointerException ex) {
        }
      }
 else {
        stringBuilder.append("");
      }
    }
  finally {
      if (bufferedReader != null) {
        try {
          bufferedReader.close();
        }
 catch (        IOException ex) {
          logger.warn("",ex);
        }
      }
    }
  }
 else {
    AtmosphereRequest.Body body=request.body();
    try {
      stringBuilder.append(body.hasString() ? body.asString() : new String(body.asBytes(),body.byteOffset(),body.byteLength(),request.getCharacterEncoding()));
    }
 catch (    UnsupportedEncodingException e) {
      logger.error("",e);
    }
  }
  return stringBuilder;
}
