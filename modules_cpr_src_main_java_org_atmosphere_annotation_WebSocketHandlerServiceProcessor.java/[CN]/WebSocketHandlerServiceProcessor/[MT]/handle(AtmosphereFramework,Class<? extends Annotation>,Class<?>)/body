{
  try {
    Class<WebSocketHandler> s=(Class<WebSocketHandler>)discoveredClass;
    WebSocketHandlerService m=s.getAnnotation(WebSocketHandlerService.class);
    framework.addAtmosphereHandler(m.path(),new AbstractReflectorAtmosphereHandler(){
      @Override public void onRequest(      AtmosphereResource resource) throws IOException {
      }
      @Override public void destroy(){
      }
    }
).initWebSocket();
    atmosphereConfig(m.atmosphereConfig(),framework);
    framework.setDefaultBroadcasterClassName(m.broadcaster().getName());
    filters(m.broadcastFilters(),framework);
    interceptors(m.interceptors(),framework);
    WebSocketProcessor p=WebSocketProcessorFactory.getDefault().getWebSocketProcessor(framework);
    p.registerWebSocketHandler(m.path(),s.newInstance());
  }
 catch (  Throwable e) {
    logger.warn("",e);
  }
}
