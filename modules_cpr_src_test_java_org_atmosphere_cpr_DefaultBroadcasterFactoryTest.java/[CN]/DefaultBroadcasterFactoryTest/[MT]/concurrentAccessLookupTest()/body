{
  final DefaultBroadcasterFactory f=new DefaultBroadcasterFactory(DefaultBroadcaster.class,"NEVER",config);
  final CountDownLatch latch=new CountDownLatch(1000);
  final AtomicInteger created=new AtomicInteger();
  f.addBroadcasterListener(new BroadcasterListener(){
    @Override public void onPostCreate(    Broadcaster b){
      created.incrementAndGet();
      latch.countDown();
    }
    @Override public void onComplete(    Broadcaster b){
    }
    @Override public void onPreDestroy(    Broadcaster b){
    }
  }
);
  ExecutorService r=Executors.newCachedThreadPool();
  try {
    for (int i=0; i < 1000; i++) {
      r.submit(new Runnable(){
        @Override public void run(){
          try {
            f.get(TestBroadcaster.class,"me");
          }
 catch (          IllegalStateException ex) {
            latch.countDown();
          }
        }
      }
);
    }
  }
  finally {
    r.shutdown();
  }
  latch.await(10,TimeUnit.SECONDS);
  try {
    assertEquals(latch.getCount(),0);
    assertEquals(f.lookupAll().size(),1);
    assertEquals(created.get(),1);
    assertEquals(TestBroadcaster.instance.get(),1);
  }
  finally {
    f.destroy();
  }
  assertEquals(TestBroadcaster.instance.get(),1);
}
