{
  JClassType baseType=typeOracle.getType(typeName);
  String packageName=baseType.getPackage().getName();
  StringBuffer buffer=new StringBuffer();
  buffer.append("public JSONValue serializeToJson(Object object){");
  buffer.append("\n");
  buffer.append("if(object==null){");
  buffer.append("\n");
  buffer.append("return JSONNull.getInstance();");
  buffer.append("\n");
  buffer.append("}");
  buffer.append("\n");
  buffer.append("if(!(object instanceof " + baseType.getSimpleSourceName() + ")){");
  buffer.append("\n");
  buffer.append("throw new IncompatibleObjectException();");
  buffer.append("\n");
  buffer.append("}");
  buffer.append("\n");
  buffer.append("JSONObject mainResult=new JSONObject();");
  buffer.append("\n");
  buffer.append("JSONValue jsonValue=null;");
  buffer.append("\n");
  buffer.append("JSONArray jsonResultArray=null;");
  buffer.append("\n");
  buffer.append("int index=0;");
  buffer.append("\n");
  buffer.append("Serializer serializer=null;");
  buffer.append("\n");
  buffer.append("Object fieldValue=null;");
  buffer.append("\n");
  buffer.append(baseType.getSimpleSourceName() + " mainVariable=(" + baseType.getSimpleSourceName()+ ")object;");
  buffer.append("\n");
  List<JField> allFields=new ArrayList<JField>();
  JField[] fields=baseType.getFields();
  for (  JField field : fields) {
    if (!field.isStatic() && !field.isTransient()) {
      allFields.add(field);
    }
  }
  if (baseType.isAssignableTo(typeOracle.getType("com.kfuntak.gwt.json.serialization.client.JsonSerializable"))) {
    boolean flag=true;
    JClassType superClassType=baseType;
    while (flag) {
      superClassType=superClassType.getSuperclass();
      if (superClassType.isAssignableTo(typeOracle.getType("com.kfuntak.gwt.json.serialization.client.JsonSerializable"))) {
        JField[] subClassFields=superClassType.getFields();
        for (        JField subClassField : subClassFields) {
          if (!subClassField.isStatic() && !subClassField.isTransient()) {
            allFields.add(subClassField);
          }
        }
      }
 else {
        flag=false;
      }
    }
  }
  fields=new JField[allFields.size()];
  allFields.toArray(fields);
  for (  JField field : fields) {
    JType fieldType=field.getType();
    String fieldName=field.getName();
    String fieldNameForGS=getNameForGS(fieldName);
    buffer.append("fieldValue=mainVariable.get" + fieldNameForGS + "();");
    buffer.append("\n");
    if (fieldType.isPrimitive() != null) {
      JPrimitiveType fieldPrimitiveType=(JPrimitiveType)fieldType;
      JClassType fieldBoxedType=typeOracle.getType(fieldPrimitiveType.getQualifiedBoxedSourceName());
      if (fieldBoxedType.getQualifiedSourceName().equals("java.lang.Boolean")) {
        buffer.append("jsonValue=SerializerHelper.getBoolean((Boolean)fieldValue);");
        buffer.append("\n");
        buffer.append("mainResult.put(\"" + fieldName + "\",jsonValue);");
        buffer.append("\n");
      }
 else       if (fieldBoxedType.getQualifiedSourceName().equals("java.lang.Character")) {
        buffer.append("jsonValue=SerializerHelper.getChar((Character)fieldValue);");
        buffer.append("\n");
        buffer.append("mainResult.put(\"" + fieldName + "\",jsonValue);");
        buffer.append("\n");
      }
 else       if (fieldBoxedType.isAssignableTo(typeOracle.getType("java.lang.Number"))) {
        buffer.append("jsonValue=SerializerHelper.getNumber((Number)fieldValue);");
        buffer.append("\n");
        buffer.append("mainResult.put(\"" + fieldName + "\",jsonValue);");
        buffer.append("\n");
      }
    }
 else {
      JClassType fieldClassType=(JClassType)fieldType;
      if (fieldClassType.isAssignableTo(typeOracle.getType("java.util.Collection"))) {
        JParameterizedType parameterizedType=(JParameterizedType)fieldClassType;
        fieldClassType=parameterizedType.getTypeArgs()[0];
        importsList.add(fieldClassType.getQualifiedSourceName());
        String fieldSimpleName=fieldClassType.getSimpleSourceName();
        buffer.append("\n");
        buffer.append("if(fieldValue != null){");
        buffer.append("\n");
        buffer.append("Collection<" + fieldSimpleName + "> "+ fieldSimpleName.toLowerCase()+ "ColValue=(Collection<"+ fieldSimpleName+ ">)fieldValue;");
        buffer.append("\n");
        buffer.append("jsonResultArray=new JSONArray();");
        buffer.append("\n");
        buffer.append("index=0;");
        buffer.append("\n");
        buffer.append("for(" + fieldSimpleName + " dummy : "+ fieldSimpleName.toLowerCase()+ "ColValue){");
        buffer.append("\n");
        if (fieldClassType.getQualifiedSourceName().equals("java.lang.String")) {
          buffer.append("jsonValue=SerializerHelper.getString((String)dummy);");
          buffer.append("\n");
          buffer.append("jsonResultArray.set(index++,jsonValue);");
          buffer.append("\n");
        }
 else         if (fieldClassType.getQualifiedSourceName().equals("java.lang.Boolean")) {
          buffer.append("jsonValue=SerializerHelper.getBoolean((Boolean)dummy);");
          buffer.append("\n");
          buffer.append("jsonResultArray.set(index++,jsonValue);");
          buffer.append("\n");
        }
 else         if (fieldClassType.getQualifiedSourceName().equals("java.lang.Character")) {
          buffer.append("jsonValue=SerializerHelper.getChar((Character)dummy);");
          buffer.append("\n");
          buffer.append("jsonResultArray.set(index++,jsonValue);");
          buffer.append("\n");
        }
 else         if (fieldClassType.isAssignableTo(typeOracle.getType("java.lang.Number"))) {
          buffer.append("jsonValue=SerializerHelper.getNumber((Number)dummy);");
          buffer.append("\n");
          buffer.append("jsonResultArray.set(index++,jsonValue);");
          buffer.append("\n");
        }
 else         if (fieldClassType.getQualifiedSourceName().equals("java.util.Date")) {
          buffer.append("jsonValue=SerializerHelper.getDate((Date)dummy);");
          buffer.append("\n");
          buffer.append("jsonResultArray.set(index++,jsonValue);");
          buffer.append("\n");
        }
 else         if (fieldClassType.isAssignableTo(typeOracle.getType("com.kfuntak.gwt.json.serialization.client.JsonSerializable"))) {
          buffer.append("serializer = GWT.create(Serializer.class);");
          buffer.append("\n");
          buffer.append("jsonResultArray.set(index++,serializer.serializeToJson(dummy));");
          buffer.append("\n");
        }
        buffer.append("}");
        buffer.append("\n");
        buffer.append("mainResult.put(\"" + fieldName + "\",jsonResultArray);");
        buffer.append("\n");
        buffer.append("}");
        buffer.append("\n");
      }
 else       if (fieldClassType.getQualifiedSourceName().equals("java.lang.String")) {
        buffer.append("jsonValue=SerializerHelper.getString((String)fieldValue);");
        buffer.append("\n");
        buffer.append("mainResult.put(\"" + fieldName + "\",jsonValue);");
        buffer.append("\n");
      }
 else       if (fieldClassType.getQualifiedSourceName().equals("java.lang.Boolean")) {
        buffer.append("jsonValue=SerializerHelper.getBoolean((Boolean)fieldValue);");
        buffer.append("\n");
        buffer.append("mainResult.put(\"" + fieldName + "\",jsonValue);");
        buffer.append("\n");
      }
 else       if (fieldClassType.getQualifiedSourceName().equals("java.lang.Character")) {
        buffer.append("jsonValue=SerializerHelper.getChar((Character)fieldValue);");
        buffer.append("\n");
        buffer.append("mainResult.put(\"" + fieldName + "\",jsonValue);");
        buffer.append("\n");
      }
 else       if (fieldClassType.isAssignableTo(typeOracle.getType("java.lang.Number"))) {
        buffer.append("jsonValue=SerializerHelper.getNumber((Number)fieldValue);");
        buffer.append("\n");
        buffer.append("mainResult.put(\"" + fieldName + "\",jsonValue);");
        buffer.append("\n");
      }
 else       if (fieldClassType.getQualifiedSourceName().equals("java.util.Date")) {
        buffer.append("jsonValue=SerializerHelper.getDate((Date)fieldValue);");
        buffer.append("\n");
        buffer.append("mainResult.put(\"" + fieldName + "\",jsonValue);");
        buffer.append("\n");
      }
 else       if (fieldClassType.isAssignableTo(typeOracle.getType("com.kfuntak.gwt.json.serialization.client.JsonSerializable"))) {
        importsList.add(fieldClassType.getQualifiedSourceName());
        buffer.append("serializer = GWT.create(Serializer.class);");
        buffer.append("\n");
        buffer.append("mainResult.put(\"" + fieldName + "\",serializer.serializeToJson(fieldValue));");
        buffer.append("\n");
      }
    }
  }
  buffer.append("mainResult.put(\"class\",new JSONString(\"" + baseType.getQualifiedSourceName() + "\"));");
  buffer.append("\n");
  buffer.append("return mainResult;");
  buffer.append("\n");
  buffer.append("}");
  buffer.append("\n");
  return buffer.toString();
}
