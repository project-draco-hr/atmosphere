{
  final CountDownLatch latch=new CountDownLatch(1);
  final AtomicReference<AtmosphereSession> session=new AtomicReference<AtmosphereSession>();
  framework.addAtmosphereHandler("/acquire",new AtmosphereHandlerAdapter(){
    @Override public void onRequest(    AtmosphereResource resource) throws IOException {
      if (session.get() == null) {
        session.set(new AtmosphereSession(resource));
      }
      resource.suspend(2,TimeUnit.SECONDS);
    }
    @Override public void onStateChange(    AtmosphereResourceEvent event) throws IOException {
      latch.countDown();
    }
  }
);
  final String qs="&X-Atmosphere-tracking-id=c8834462-c46e-4dad-a22f-b86aabe3f883&X-Atmosphere-Framework=2.0.4-javascript&X-Atmosphere-Transport=sse&X-Atmosphere-TrackMessageSize=true&X-atmo-protocol=true&_=1380799455333";
  AtmosphereRequest request=new AtmosphereRequestImpl.Builder().queryString(qs).pathInfo("/acquire").build();
  framework.doCometSupport(request,AtmosphereResponseImpl.newInstance());
  latch.await(10,TimeUnit.SECONDS);
  assertNull(session.get().acquire());
  final AtomicReference<AtmosphereResource> rrr=new AtomicReference<AtmosphereResource>();
  final CountDownLatch _latch=new CountDownLatch(1);
  framework.addAtmosphereHandler("/acquire",new AtmosphereHandlerAdapter(){
    @Override public void onRequest(    final AtmosphereResource resource) throws IOException {
      resource.suspend(2,TimeUnit.SECONDS);
    }
    @Override public void onStateChange(    AtmosphereResourceEvent event) throws IOException {
      try {
        rrr.set(session.get().tryAcquire());
        _latch.countDown();
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
);
  request=new AtmosphereRequestImpl.Builder().queryString(qs).pathInfo("/acquire").build();
  framework.doCometSupport(request,AtmosphereResponseImpl.newInstance(request));
  _latch.await(10,TimeUnit.SECONDS);
  assertNotNull(rrr.get());
  new Thread(){
    public void run(){
      try {
        Thread.sleep(1000);
        AtmosphereRequest request=new AtmosphereRequestImpl.Builder().queryString(qs).pathInfo("/acquire").build();
        framework.doCometSupport(request,AtmosphereResponseImpl.newInstance(request));
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
.start();
  assertNotNull(session.get().tryAcquire());
}
