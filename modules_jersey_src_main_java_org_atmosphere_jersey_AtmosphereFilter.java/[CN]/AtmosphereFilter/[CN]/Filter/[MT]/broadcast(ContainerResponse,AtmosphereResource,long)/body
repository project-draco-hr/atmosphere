{
  Object o=r.getEntity();
  Broadcaster b=ar.getBroadcaster();
  Object msg=o;
  String returnMsg=null;
  if (o instanceof Broadcastable) {
    b=((Broadcastable)o).getBroadcaster();
    msg=((Broadcastable)o).getMessage();
    returnMsg=((Broadcastable)o).getResponseMessage().toString();
  }
  if (action == Action.RESUME_ON_BROADCAST) {
    configureResumeOnBroadcast(b);
  }
  if (o != null) {
    addFilter(b);
    try {
      r.setEntity(msg);
      if (msg == null)       return;
      if (delay == -1) {
        Future<Object> f=b.broadcast(msg);
        if (f == null)         return;
        Object t=f.get();
        if (o instanceof Broadcastable) {
          r.setEntity(returnMsg);
        }
      }
 else       if (delay == 0) {
        b.delayBroadcast(msg);
      }
 else {
        b.delayBroadcast(msg,delay,TimeUnit.SECONDS);
      }
    }
 catch (    InterruptedException ex) {
      logger.log(Level.SEVERE,null,ex);
    }
catch (    ExecutionException ex) {
      logger.log(Level.SEVERE,null,ex);
    }
  }
}
