{
  if (!delegateToNativeResponse || forceAsyncIOWriter) {
    return new PrintWriter(getOutputStream()){
      public void write(      char[] chars,      int offset,      int lenght){
        try {
          writeStatusAndHeaders();
          boolean b=forceAsyncIOWriter;
          forceAsyncIOWriter=false;
          asyncIOWriter.write(AtmosphereResponse.this,new String(chars,offset,lenght));
          forceAsyncIOWriter=b;
        }
 catch (        IOException e) {
          throw new RuntimeException(e);
        }
      }
      public void write(      char[] chars){
        try {
          writeStatusAndHeaders();
          boolean b=forceAsyncIOWriter;
          forceAsyncIOWriter=false;
          asyncIOWriter.write(AtmosphereResponse.this,new String(chars));
          forceAsyncIOWriter=b;
        }
 catch (        IOException e) {
          throw new RuntimeException(e);
        }
      }
      public void write(      String s,      int offset,      int lenght){
        try {
          writeStatusAndHeaders();
          boolean b=forceAsyncIOWriter;
          forceAsyncIOWriter=false;
          asyncIOWriter.write(AtmosphereResponse.this,new String(s.substring(offset,lenght)));
          forceAsyncIOWriter=b;
        }
 catch (        IOException e) {
          throw new RuntimeException(e);
        }
      }
      public void write(      java.lang.String s){
        try {
          writeStatusAndHeaders();
          boolean b=forceAsyncIOWriter;
          forceAsyncIOWriter=false;
          asyncIOWriter.write(AtmosphereResponse.this,new String(s));
          forceAsyncIOWriter=b;
        }
 catch (        IOException e) {
          throw new RuntimeException(e);
        }
      }
    }
;
  }
 else {
    return _r().getWriter();
  }
}
