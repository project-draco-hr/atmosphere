{
  WebSocketFactory webSocketFactory=new WebSocketFactory(new WebSocketFactory.Acceptor(){
    public boolean checkOrigin(    HttpServletRequest request,    String origin){
      logger.debug("WebSocket-checkOrigin request {} with origin {}",request.getRequestURI(),origin);
      return true;
    }
    public org.eclipse.jetty.websocket.WebSocket doWebSocketConnect(    HttpServletRequest request,    String protocol){
      logger.debug("WebSocket-connect request {} with protocol {}",request.getRequestURI(),protocol);
      return new JettyWebSocketHandler(request,config.getServlet(),config.getServlet().getWebSocketProcessorClassName());
    }
  }
);
  int bufferSize=8192;
  if (config.getInitParameter(AtmosphereServlet.WEBSOCKET_BUFFER_SIZE) != null) {
    bufferSize=Integer.valueOf(config.getInitParameter(AtmosphereServlet.WEBSOCKET_BUFFER_SIZE));
  }
  logger.info("WebSocket Buffer side {}",bufferSize);
  webSocketFactory.setBufferSize(bufferSize);
  int timeOut=5 * 60000;
  if (config.getInitParameter(AtmosphereServlet.WEBSOCKET_IDLETIME) != null) {
    timeOut=Integer.valueOf(config.getInitParameter(AtmosphereServlet.WEBSOCKET_IDLETIME));
  }
  logger.info("WebSocket idle timeout {}",timeOut);
  webSocketFactory.setMaxIdleTime(timeOut);
  return webSocketFactory;
}
