{
  Boolean b=(Boolean)req.getAttribute(WebSocket.WEBSOCKET_INITIATED);
  if (b == null)   b=Boolean.FALSE;
  if (!Utils.webSocketEnabled(req) && req.getAttribute(WebSocket.WEBSOCKET_ACCEPT_DONE) == null) {
    if (req.resource() != null && req.resource().transport() == AtmosphereResource.TRANSPORT.WEBSOCKET) {
      logger.trace("Invalid WebSocket Specification {}",req);
      res.addHeader(X_ATMOSPHERE_ERROR,"Websocket protocol not supported");
      res.sendError(501,"Websocket protocol not supported");
      return Action.CANCELLED;
    }
 else {
      return null;
    }
  }
 else {
    if (webSocketFactory != null && !b) {
      req.setAttribute(WebSocket.WEBSOCKET_INITIATED,true);
      try {
        webSocketFactory.acceptWebSocket(req,res);
      }
 catch (      IllegalStateException ex) {
        logger.trace("Invalid WebSocket Specification {}",req);
        logger.trace("",ex);
        res.addHeader(X_ATMOSPHERE_ERROR,"Websocket protocol not supported");
        res.sendError(501,"Websocket protocol not supported");
        return Action.CANCELLED;
      }
      req.setAttribute(WebSocket.WEBSOCKET_ACCEPT_DONE,true);
      return new Action();
    }
    Action action=cometSupport.suspended(req,res);
    if (action.type() == Action.TYPE.SUSPEND) {
    }
 else     if (action.type() == Action.TYPE.RESUME) {
      req.setAttribute(WebSocket.WEBSOCKET_RESUME,true);
    }
    return action;
  }
}
