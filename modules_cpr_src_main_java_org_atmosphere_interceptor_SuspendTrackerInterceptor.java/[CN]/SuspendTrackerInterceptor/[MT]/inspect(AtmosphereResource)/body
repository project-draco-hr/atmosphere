{
  if (Utils.webSocketMessage(r))   return Action.CONTINUE;
  final AtmosphereRequest request=AtmosphereResourceImpl.class.cast(r).getRequest(false);
  boolean connecting=request.getHeader(HeaderConfig.X_ATMOSPHERE_TRACKING_ID) != null && request.getHeader(HeaderConfig.X_ATMOSPHERE_TRACKING_ID).equals("0");
  if (connecting && !Utils.pollableTransport(r.transport())) {
    if (!trackedUUID.add(r.uuid())) {
      logger.trace("Blocking {} from suspend",r.uuid());
      AtmosphereResourceImpl.class.cast(r).disableSuspendEvent(true);
    }
    r.addEventListener(new OnDisconnect(){
      @Override public void onDisconnect(      AtmosphereResourceEvent event){
        logger.trace("Untracking {}",r.uuid());
        trackedUUID.remove(r.uuid());
      }
      @Override public void onClose(      AtmosphereResourceEvent event){
        onDisconnect(event);
      }
    }
);
  }
  return Action.CONTINUE;
}
