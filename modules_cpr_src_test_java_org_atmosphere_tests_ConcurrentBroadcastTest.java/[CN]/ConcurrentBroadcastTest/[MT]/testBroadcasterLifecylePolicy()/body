{
  logger.info("Running testBroadcasterLifecylePolicy");
  AsyncHttpClient c=new AsyncHttpClient();
  Broadcaster b=null;
  try {
    final AtomicReference<Response> r=new AtomicReference();
    c.prepareGet(urlTarget + "/suspend").execute(new AsyncCompletionHandler<Response>(){
      @Override public Response onCompleted(      Response response) throws Exception {
        r.set(response);
        suspended.countDown();
        return response;
      }
    }
);
    for (int i=0; i < 50; i++) {
      c.prepareGet(urlTarget + "/suspend").execute();
    }
    suspended.await(20,TimeUnit.SECONDS);
    assertEquals(r.get().getResponseBody(),"Recovering a dead broadcasted");
  }
 catch (  Exception e) {
    logger.error("test failed",e);
    fail(e.getMessage());
  }
 finally {
    if (b != null)     b.destroy();
  }
  c.close();
}
