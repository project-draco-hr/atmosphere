{
  return new Timer(){
    @Override public void run(){
      reconnectionCounter++;
      logger.finest("Running reconnect: count=" + (reconnectionCounter - 1));
      if (reconnectionCount != -1 && reconnectionCounter - 2 > reconnectionCount) {
        logger.info("Reconnection attempts exceeded " + reconnectionCount + ". Giving up...");
        stop();
      }
 else       if (running) {
        logger.fine("Starting reconnect");
        refreshState=RefreshState.PRIMARY_RECONNECT;
        doConnect();
      }
    }
    @Override public void schedule(    int delayMillis){
      int delay=delayMillis * (reconnectionCounter < 30 ? reconnectionCounter : 30);
      logger.finest("Scheduling for reconnect, waiting " + (delay / 1000) + "s");
      super.cancel();
      super.schedule(delay);
    }
  }
;
}
