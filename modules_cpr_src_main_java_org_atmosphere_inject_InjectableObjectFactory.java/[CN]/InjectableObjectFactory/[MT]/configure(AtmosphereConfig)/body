{
  this.config=config;
  for (  Injectable i : injectableServiceLoader) {
    try {
      logger.debug("Adding class {} as injectable",i.getClass());
      if (InjectIntrospector.class.isAssignableFrom(i.getClass())) {
        InjectIntrospector<?> ii=InjectIntrospector.class.cast(i);
        introspectors.addFirst(ii);
        if (i.getClass().isAnnotationPresent(RequestScoped.class)) {
          config.properties().put(FrameworkConfig.NEED_RUNTIME_INJECTION,true);
          requestScopedIntrospectors.addFirst(ii);
        }
      }
      if (i.getClass().isAnnotationPresent(ApplicationScoped.class) || (!i.getClass().isAnnotationPresent(RequestScoped.class) && !i.getClass().isAnnotationPresent(RequestScoped.class))) {
        injectables.addFirst(i);
      }
    }
 catch (    Exception e) {
      logger.error("",e);
    }
  }
}
