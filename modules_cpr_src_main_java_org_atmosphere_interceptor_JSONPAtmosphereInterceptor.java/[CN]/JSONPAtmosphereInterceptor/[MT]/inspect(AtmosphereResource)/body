{
  final AtmosphereRequest request=r.getRequest();
  final AtmosphereResponse response=r.getResponse();
  if (r.transport().equals(AtmosphereResource.TRANSPORT.JSONP)) {
    response.asyncIOWriter(new AsyncIOWriter(){
      String contentType(){
        String c=response.getContentType();
        if (c == null) {
          c=(String)request.getAttribute(FrameworkConfig.EXPECTED_CONTENT_TYPE);
        }
        return c;
      }
      String callbackName(){
        return request.getParameter(HeaderConfig.JSONP_CALLBACK_NAME);
      }
      @Override public void redirect(      String location) throws IOException {
        response.sendRedirect(location);
      }
      @Override public void writeError(      int errorCode,      String message) throws IOException {
        response.sendError(errorCode);
      }
      @Override public void write(      String data) throws IOException {
        String contentType=contentType();
        String callbackName=callbackName();
        if (contentType != null && !contentType.contains("json")) {
          data=callbackName + "({\"message\" : \"" + data+ "\"})";
        }
 else {
          data=callbackName + "({\"message\" :" + data+ "})";
        }
        response.write(data);
      }
      @Override public void write(      byte[] data) throws IOException {
        String contentType=contentType();
        String callbackName=callbackName();
        if (contentType != null && !contentType.contains("json")) {
          response.write(callbackName + "({\"message\" : \"").write(data).write("\"})");
        }
 else {
          response.write(callbackName + "({\"message\" :").write(data).write("})");
        }
      }
      @Override public void write(      byte[] data,      int offset,      int length) throws IOException {
        String contentType=contentType();
        String callbackName=callbackName();
        if (contentType != null && !contentType.contains("json")) {
          response.write(callbackName + "({\"message\" : \"").write(data,offset,length).write("\"})");
        }
 else {
          response.write(callbackName + "({\"message\" :").write(data,offset,length).write("})");
        }
      }
      @Override public void close() throws IOException {
        response.closeStreamOrWriter();
      }
      @Override public void flush() throws IOException {
        response.flushBuffer();
      }
    }
);
  }
  return Action.CONTINUE;
}
