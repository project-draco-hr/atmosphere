{
  final CountDownLatch latch=new CountDownLatch(1);
  broadcaster.getBroadcasterConfig().setBroadcasterCache(new AbstractBroadcasterCache(){
    @Override public CacheMessage addToCache(    String id,    String r,    BroadcastMessage e){
      CacheMessage c=put(e,System.nanoTime(),r);
      cachedMessage.set(messages);
      latch.countDown();
      return c;
    }
    @Override public List<Object> retrieveFromCache(    String id,    AtmosphereResource r){
      return Collections.<Object>emptyList();
    }
  }
).getBroadcasterCache().inspector(new BroadcasterCacheInspector(){
    @Override public boolean inspect(    BroadcastMessage message){
      return false;
    }
  }
);
  broadcaster.broadcast("foo",ar);
  latch.await(10,TimeUnit.SECONDS);
  assertEquals(cachedMessage.get().size(),0);
}
