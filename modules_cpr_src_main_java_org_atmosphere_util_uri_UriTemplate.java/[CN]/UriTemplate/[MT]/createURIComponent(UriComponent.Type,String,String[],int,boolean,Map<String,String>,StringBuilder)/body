{
  if (template.indexOf('{') == -1) {
    b.append(template);
    return offset;
  }
  template=new UriTemplateParser(template).getNormalizedTemplate();
  final Matcher m=TEMPLATE_NAMES_PATTERN.matcher(template);
  int v=offset;
  int i=0;
  while (m.find()) {
    b.append(template,i,m.start());
    final String tVariable=m.group(1);
    String tValue=mapValues.get(tVariable);
    if (tValue != null) {
      b.append(tValue);
    }
 else     if (v < values.length) {
      tValue=values[v++];
      if (tValue != null) {
        if (encode)         tValue=UriComponent.encode(tValue,t);
 else         tValue=UriComponent.contextualEncode(tValue,t);
        mapValues.put(tVariable,tValue);
        b.append(tValue);
      }
 else {
        throw templateVariableHasNoValue(tVariable);
      }
    }
 else {
      throw templateVariableHasNoValue(tVariable);
    }
    i=m.end();
  }
  b.append(template,i,template.length());
  return v;
}
