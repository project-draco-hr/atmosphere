{
  final Map<String,String> mapValues=new HashMap<String,String>();
  final StringBuilder sb=new StringBuilder();
  int offset=0;
  if (scheme != null) {
    offset=createURIComponent(UriComponent.Type.SCHEME,scheme,values,offset,false,mapValues,sb);
    sb.append(':');
  }
  if (userInfo != null || host != null || port != null) {
    sb.append("//");
    if (userInfo != null && userInfo.length() > 0) {
      offset=createURIComponent(UriComponent.Type.USER_INFO,userInfo,values,offset,encode,mapValues,sb);
      sb.append('@');
    }
    if (host != null) {
      offset=createURIComponent(UriComponent.Type.HOST,host,values,offset,encode,mapValues,sb);
    }
    if (port != null && port.length() > 0) {
      sb.append(':');
      offset=createURIComponent(UriComponent.Type.PORT,port,values,offset,false,mapValues,sb);
    }
  }
 else   if (authority != null) {
    sb.append("//");
    offset=createURIComponent(UriComponent.Type.AUTHORITY,authority,values,offset,encode,mapValues,sb);
  }
  if (path != null)   offset=createURIComponent(UriComponent.Type.PATH,path,values,offset,encode,mapValues,sb);
  if (query != null && query.length() > 0) {
    sb.append('?');
    offset=createURIComponent(UriComponent.Type.QUERY_PARAM,query,values,offset,encode,mapValues,sb);
  }
  if (fragment != null && fragment.length() > 0) {
    sb.append('#');
    offset=createURIComponent(UriComponent.Type.FRAGMENT,fragment,values,offset,encode,mapValues,sb);
  }
  return sb.toString();
}
