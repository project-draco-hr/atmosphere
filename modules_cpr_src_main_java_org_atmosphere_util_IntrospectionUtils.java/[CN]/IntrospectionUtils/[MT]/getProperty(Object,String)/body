{
  String getter="get" + capitalize(name);
  String isGetter="is" + capitalize(name);
  try {
    Method methods[]=findMethods(object.getClass());
    Method getPropertyMethod=null;
    for (int i=0; i < methods.length; i++) {
      Class<?> paramT[]=methods[i].getParameterTypes();
      if (getter.equals(methods[i].getName()) && paramT.length == 0) {
        return methods[i].invoke(object,(Object[])null);
      }
      if (isGetter.equals(methods[i].getName()) && paramT.length == 0) {
        return methods[i].invoke(object,(Object[])null);
      }
      if ("getProperty".equals(methods[i].getName())) {
        getPropertyMethod=methods[i];
      }
    }
    if (getPropertyMethod != null) {
      Object params[]=new Object[1];
      params[0]=name;
      return getPropertyMethod.invoke(object,params);
    }
  }
 catch (  IllegalArgumentException e) {
    logger.info("failed, object: " + object + ", name: "+ name,e);
  }
catch (  Exception e) {
    if (dbg > 0) {
      debug(e.getClass().getSimpleName() + " for " + object.getClass()+ " "+ name+ ")");
    }
    if (dbg > 1) {
      logger.debug("",e);
    }
  }
  return null;
}
