{
  try {
    Method methods[]=findMethods(o.getClass());
    Method setPropertyMethodVoid=null;
    Method setPropertyMethodBool=null;
    for (int i=0; i < methods.length; i++) {
      Class<?> paramT[]=methods[i].getParameterTypes();
      if (setter.equals(methods[i].getName()) && paramT.length == 1 && "java.lang.String".equals(paramT[0].getName())) {
        methods[i].invoke(o,new Object[]{value});
        return true;
      }
    }
    for (int i=0; i < methods.length; i++) {
      boolean ok=true;
      if (setter.equals(methods[i].getName()) && methods[i].getParameterTypes().length == 1) {
        Class<?> paramType=methods[i].getParameterTypes()[0];
        Object params[]=new Object[1];
        if ("java.lang.Integer".equals(paramType.getName()) || "int".equals(paramType.getName())) {
          try {
            params[0]=new Integer(value);
          }
 catch (          NumberFormatException ex) {
            ok=false;
          }
        }
 else         if ("java.lang.Long".equals(paramType.getName()) || "long".equals(paramType.getName())) {
          try {
            params[0]=new Long(value);
          }
 catch (          NumberFormatException ex) {
            ok=false;
          }
        }
 else         if ("java.lang.Boolean".equals(paramType.getName()) || "boolean".equals(paramType.getName())) {
          params[0]=new Boolean(value);
        }
 else         if ("java.net.InetAddress".equals(paramType.getName())) {
          try {
            params[0]=InetAddress.getByName(value);
          }
 catch (          UnknownHostException exc) {
            d("Unable to resolve host name:" + value);
            ok=false;
          }
        }
 else {
          d("Unknown type " + paramType.getName());
        }
        if (ok) {
          methods[i].invoke(o,params);
          return true;
        }
      }
      if ("setProperty".equals(methods[i].getName())) {
        if (methods[i].getReturnType() == Boolean.TYPE) {
          setPropertyMethodBool=methods[i];
        }
 else {
          setPropertyMethodVoid=methods[i];
        }
      }
    }
    if (setPropertyMethodBool != null || setPropertyMethodVoid != null) {
      Object params[]=new Object[2];
      params[0]=name;
      params[1]=value;
      if (setPropertyMethodBool != null) {
        try {
          return (Boolean)setPropertyMethodBool.invoke(o,params);
        }
 catch (        IllegalArgumentException biae) {
          if (setPropertyMethodVoid != null) {
            setPropertyMethodVoid.invoke(o,params);
            return true;
          }
 else {
            throw biae;
          }
        }
      }
 else {
        setPropertyMethodVoid.invoke(o,params);
        return true;
      }
    }
  }
 catch (  IllegalArgumentException ex2) {
    logger.log(Level.INFO,"IAE " + o + " "+ setter+ " "+ value,ex2);
  }
catch (  SecurityException ex1) {
    if (dbg > 0)     d("SecurityException for " + o.getClass() + " "+ setter+ "="+ value+ ")");
    if (dbg > 1)     ex1.printStackTrace();
  }
catch (  IllegalAccessException iae) {
    if (dbg > 0)     d("IllegalAccessException for " + o.getClass() + " "+ setter+ "="+ value+ ")");
    if (dbg > 1)     iae.printStackTrace();
  }
catch (  InvocationTargetException ie) {
    if (dbg > 0)     d("InvocationTargetException for " + o.getClass() + " "+ setter+ "="+ value+ ")");
    if (dbg > 1)     ie.printStackTrace();
  }
  return false;
}
