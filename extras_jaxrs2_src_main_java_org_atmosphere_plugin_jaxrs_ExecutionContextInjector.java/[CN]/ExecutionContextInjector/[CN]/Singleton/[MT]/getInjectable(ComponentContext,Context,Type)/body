{
  if (!isValidType(t))   return null;
  return new Injectable<ExecutionContext>(){
    @Override public ExecutionContext getValue(){
      return (ExecutionContext)Proxy.newProxyInstance(this.getClass().getClassLoader(),new Class[]{ExecutionContext.class},new InvocationHandler(){
        @Override public Object invoke(        Object proxy,        Method method,        Object[] args) throws Throwable {
          return method.invoke(new AtmosphereExecutionContext(AtmosphereResourceImpl.class.cast(getAtmosphereResource(AtmosphereResource.class,false))),args);
        }
      }
);
    }
  }
;
}
