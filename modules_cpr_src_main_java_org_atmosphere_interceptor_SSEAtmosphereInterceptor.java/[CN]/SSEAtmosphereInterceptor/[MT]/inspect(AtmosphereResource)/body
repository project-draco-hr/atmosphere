{
  final AtmosphereResponse response=r.getResponse();
  if (r.transport().equals(AtmosphereResource.TRANSPORT.SSE)) {
    String contentType=response.getContentType();
    response.setContentType("text/event-stream");
    response.setCharacterEncoding("utf-8");
    PrintWriter writer=null;
    try {
      writer=response.getWriter();
    }
 catch (    IOException e) {
    }
    for (int i=0; i < 2000; i++) {
      writer.print(' ');
    }
    writer.print("\n");
    writer.flush();
    response.setContentType(contentType);
    response.asyncIOWriter(new AsyncIOWriter(){
      @Override public void redirect(      String location) throws IOException {
        response.sendRedirect(location);
      }
      @Override public void writeError(      int errorCode,      String message) throws IOException {
        response.sendError(errorCode);
      }
      @Override public void write(      String data) throws IOException {
        response.write("data:" + data + "\n\n");
      }
      @Override public void write(      byte[] data) throws IOException {
        response.write("data:").write(data).write("\n\n");
      }
      @Override public void write(      byte[] data,      int offset,      int length) throws IOException {
        response.write("data:").write(data,offset,length).write("\n\n");
      }
      @Override public void close() throws IOException {
        response.closeStreamOrWriter();
      }
      @Override public void flush() throws IOException {
        response.flushBuffer();
      }
    }
);
  }
  return Action.CONTINUE;
}
